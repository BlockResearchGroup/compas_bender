Search.setIndex({"docnames": ["api", "api/compas_bender", "api/compas_bender.bender", "api/compas_bender.datastructures", "api/compas_bender.rhino", "api/generated/compas_bender.bender.bend_splines", "api/generated/compas_bender.datastructures.BendNetwork", "api/generated/compas_bender.datastructures.BendNetwork.ToString", "api/generated/compas_bender.datastructures.BendNetwork.add_edge", "api/generated/compas_bender.datastructures.BendNetwork.add_node", "api/generated/compas_bender.datastructures.BendNetwork.adjacency_matrix", "api/generated/compas_bender.datastructures.BendNetwork.clear", "api/generated/compas_bender.datastructures.BendNetwork.complement", "api/generated/compas_bender.datastructures.BendNetwork.connected_edges", "api/generated/compas_bender.datastructures.BendNetwork.connectivity_matrix", "api/generated/compas_bender.datastructures.BendNetwork.copy", "api/generated/compas_bender.datastructures.BendNetwork.count_crossings", "api/generated/compas_bender.datastructures.BendNetwork.degree", "api/generated/compas_bender.datastructures.BendNetwork.degree_in", "api/generated/compas_bender.datastructures.BendNetwork.degree_matrix", "api/generated/compas_bender.datastructures.BendNetwork.degree_out", "api/generated/compas_bender.datastructures.BendNetwork.delete_edge", "api/generated/compas_bender.datastructures.BendNetwork.delete_node", "api/generated/compas_bender.datastructures.BendNetwork.edge_attribute", "api/generated/compas_bender.datastructures.BendNetwork.edge_attributes", "api/generated/compas_bender.datastructures.BendNetwork.edge_coordinates", "api/generated/compas_bender.datastructures.BendNetwork.edge_direction", "api/generated/compas_bender.datastructures.BendNetwork.edge_length", "api/generated/compas_bender.datastructures.BendNetwork.edge_line", "api/generated/compas_bender.datastructures.BendNetwork.edge_midpoint", "api/generated/compas_bender.datastructures.BendNetwork.edge_point", "api/generated/compas_bender.datastructures.BendNetwork.edge_sample", "api/generated/compas_bender.datastructures.BendNetwork.edge_vector", "api/generated/compas_bender.datastructures.BendNetwork.edges", "api/generated/compas_bender.datastructures.BendNetwork.edges_attribute", "api/generated/compas_bender.datastructures.BendNetwork.edges_attributes", "api/generated/compas_bender.datastructures.BendNetwork.edges_where", "api/generated/compas_bender.datastructures.BendNetwork.edges_where_predicate", "api/generated/compas_bender.datastructures.BendNetwork.embed_in_plane", "api/generated/compas_bender.datastructures.BendNetwork.find_crossings", "api/generated/compas_bender.datastructures.BendNetwork.find_cycles", "api/generated/compas_bender.datastructures.BendNetwork.from_data", "api/generated/compas_bender.datastructures.BendNetwork.from_edges", "api/generated/compas_bender.datastructures.BendNetwork.from_json", "api/generated/compas_bender.datastructures.BendNetwork.from_jsonstring", "api/generated/compas_bender.datastructures.BendNetwork.from_lines", "api/generated/compas_bender.datastructures.BendNetwork.from_networkx", "api/generated/compas_bender.datastructures.BendNetwork.from_nodes_and_edges", "api/generated/compas_bender.datastructures.BendNetwork.from_obj", "api/generated/compas_bender.datastructures.BendNetwork.from_pointcloud", "api/generated/compas_bender.datastructures.BendNetwork.get_any_edge", "api/generated/compas_bender.datastructures.BendNetwork.get_any_edges", "api/generated/compas_bender.datastructures.BendNetwork.get_any_node", "api/generated/compas_bender.datastructures.BendNetwork.get_any_nodes", "api/generated/compas_bender.datastructures.BendNetwork.gkey_key", "api/generated/compas_bender.datastructures.BendNetwork.gkey_node", "api/generated/compas_bender.datastructures.BendNetwork.has_edge", "api/generated/compas_bender.datastructures.BendNetwork.has_node", "api/generated/compas_bender.datastructures.BendNetwork.index_key", "api/generated/compas_bender.datastructures.BendNetwork.index_uv", "api/generated/compas_bender.datastructures.BendNetwork.is_connected", "api/generated/compas_bender.datastructures.BendNetwork.is_crossed", "api/generated/compas_bender.datastructures.BendNetwork.is_leaf", "api/generated/compas_bender.datastructures.BendNetwork.is_node_connected", "api/generated/compas_bender.datastructures.BendNetwork.is_planar", "api/generated/compas_bender.datastructures.BendNetwork.is_planar_embedding", "api/generated/compas_bender.datastructures.BendNetwork.is_xy", "api/generated/compas_bender.datastructures.BendNetwork.key_gkey", "api/generated/compas_bender.datastructures.BendNetwork.key_index", "api/generated/compas_bender.datastructures.BendNetwork.laplacian_matrix", "api/generated/compas_bender.datastructures.BendNetwork.leaves", "api/generated/compas_bender.datastructures.BendNetwork.neighborhood", "api/generated/compas_bender.datastructures.BendNetwork.neighbors", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_in", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_out", "api/generated/compas_bender.datastructures.BendNetwork.network_adjacency_matrix", "api/generated/compas_bender.datastructures.BendNetwork.network_connectivity_matrix", "api/generated/compas_bender.datastructures.BendNetwork.network_degree_matrix", "api/generated/compas_bender.datastructures.BendNetwork.network_embed_in_plane", "api/generated/compas_bender.datastructures.BendNetwork.network_is_planar", "api/generated/compas_bender.datastructures.BendNetwork.network_is_planar_embedding", "api/generated/compas_bender.datastructures.BendNetwork.network_laplacian_matrix", "api/generated/compas_bender.datastructures.BendNetwork.node_attribute", "api/generated/compas_bender.datastructures.BendNetwork.node_attributes", "api/generated/compas_bender.datastructures.BendNetwork.node_coordinates", "api/generated/compas_bender.datastructures.BendNetwork.node_gkey", "api/generated/compas_bender.datastructures.BendNetwork.node_laplacian", "api/generated/compas_bender.datastructures.BendNetwork.node_neighborhood_centroid", "api/generated/compas_bender.datastructures.BendNetwork.node_point", "api/generated/compas_bender.datastructures.BendNetwork.node_reaction", "api/generated/compas_bender.datastructures.BendNetwork.node_residual", "api/generated/compas_bender.datastructures.BendNetwork.node_sample", "api/generated/compas_bender.datastructures.BendNetwork.nodes", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attribute", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attributes", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where_predicate", "api/generated/compas_bender.datastructures.BendNetwork.number_of_edges", "api/generated/compas_bender.datastructures.BendNetwork.number_of_nodes", "api/generated/compas_bender.datastructures.BendNetwork.sha256", "api/generated/compas_bender.datastructures.BendNetwork.shortest_path", "api/generated/compas_bender.datastructures.BendNetwork.smooth", "api/generated/compas_bender.datastructures.BendNetwork.split_edge", "api/generated/compas_bender.datastructures.BendNetwork.summary", "api/generated/compas_bender.datastructures.BendNetwork.to_data", "api/generated/compas_bender.datastructures.BendNetwork.to_json", "api/generated/compas_bender.datastructures.BendNetwork.to_jsonstring", "api/generated/compas_bender.datastructures.BendNetwork.to_lines", "api/generated/compas_bender.datastructures.BendNetwork.to_networkx", "api/generated/compas_bender.datastructures.BendNetwork.to_nodes_and_edges", "api/generated/compas_bender.datastructures.BendNetwork.to_obj", "api/generated/compas_bender.datastructures.BendNetwork.to_points", "api/generated/compas_bender.datastructures.BendNetwork.transform", "api/generated/compas_bender.datastructures.BendNetwork.transformed", "api/generated/compas_bender.datastructures.BendNetwork.unset_edge_attribute", "api/generated/compas_bender.datastructures.BendNetwork.unset_node_attribute", "api/generated/compas_bender.datastructures.BendNetwork.update_dea", "api/generated/compas_bender.datastructures.BendNetwork.update_default_edge_attributes", "api/generated/compas_bender.datastructures.BendNetwork.update_default_node_attributes", "api/generated/compas_bender.datastructures.BendNetwork.update_dna", "api/generated/compas_bender.datastructures.BendNetwork.uv_index", "api/generated/compas_bender.datastructures.BendNetwork.validate_data", "api/generated/compas_bender.datastructures.BendNetwork.validate_json", "api/generated/compas_bender.rhino.BendNetworkArtist", "api/generated/compas_bender.rhino.BendNetworkArtist.build", "api/generated/compas_bender.rhino.BendNetworkArtist.build_as", "api/generated/compas_bender.rhino.BendNetworkArtist.clear", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_edgelabels", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_edges", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_layer", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_nodelabels", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_nodes", "api/generated/compas_bender.rhino.BendNetworkArtist.draw", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_axial", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_collection", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_edgelabels", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_edges", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_nodelabels", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_nodes", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_reactions", "api/generated/compas_bender.rhino.BendNetworkArtist.redraw", "api/generated/compas_bender.rhino.BendNetworkArtist.register", "examples", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/compas_bender.rst", "api/compas_bender.bender.rst", "api/compas_bender.datastructures.rst", "api/compas_bender.rhino.rst", "api/generated/compas_bender.bender.bend_splines.rst", "api/generated/compas_bender.datastructures.BendNetwork.rst", "api/generated/compas_bender.datastructures.BendNetwork.ToString.rst", "api/generated/compas_bender.datastructures.BendNetwork.add_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.add_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.adjacency_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.clear.rst", "api/generated/compas_bender.datastructures.BendNetwork.complement.rst", "api/generated/compas_bender.datastructures.BendNetwork.connected_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.connectivity_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.copy.rst", "api/generated/compas_bender.datastructures.BendNetwork.count_crossings.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree_in.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree_out.rst", "api/generated/compas_bender.datastructures.BendNetwork.delete_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.delete_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_coordinates.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_direction.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_length.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_line.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_midpoint.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_point.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_sample.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_vector.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_where.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_where_predicate.rst", "api/generated/compas_bender.datastructures.BendNetwork.embed_in_plane.rst", "api/generated/compas_bender.datastructures.BendNetwork.find_crossings.rst", "api/generated/compas_bender.datastructures.BendNetwork.find_cycles.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_data.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_json.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_jsonstring.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_lines.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_networkx.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_nodes_and_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_obj.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_pointcloud.rst", "api/generated/compas_bender.datastructures.BendNetwork.get_any_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.get_any_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.get_any_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.get_any_nodes.rst", "api/generated/compas_bender.datastructures.BendNetwork.gkey_key.rst", "api/generated/compas_bender.datastructures.BendNetwork.gkey_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.has_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.has_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.index_key.rst", "api/generated/compas_bender.datastructures.BendNetwork.index_uv.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_connected.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_crossed.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_leaf.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_node_connected.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_planar.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_planar_embedding.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_xy.rst", "api/generated/compas_bender.datastructures.BendNetwork.key_gkey.rst", "api/generated/compas_bender.datastructures.BendNetwork.key_index.rst", "api/generated/compas_bender.datastructures.BendNetwork.laplacian_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.leaves.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighborhood.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighbors.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_in.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_out.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_adjacency_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_connectivity_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_degree_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_embed_in_plane.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_is_planar.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_is_planar_embedding.rst", "api/generated/compas_bender.datastructures.BendNetwork.network_laplacian_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_coordinates.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_gkey.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_laplacian.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_neighborhood_centroid.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_point.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_reaction.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_residual.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_sample.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where_predicate.rst", "api/generated/compas_bender.datastructures.BendNetwork.number_of_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.number_of_nodes.rst", "api/generated/compas_bender.datastructures.BendNetwork.sha256.rst", "api/generated/compas_bender.datastructures.BendNetwork.shortest_path.rst", "api/generated/compas_bender.datastructures.BendNetwork.smooth.rst", "api/generated/compas_bender.datastructures.BendNetwork.split_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.summary.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_data.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_json.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_jsonstring.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_lines.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_networkx.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_nodes_and_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_obj.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_points.rst", "api/generated/compas_bender.datastructures.BendNetwork.transform.rst", "api/generated/compas_bender.datastructures.BendNetwork.transformed.rst", "api/generated/compas_bender.datastructures.BendNetwork.unset_edge_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.unset_node_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.update_dea.rst", "api/generated/compas_bender.datastructures.BendNetwork.update_default_edge_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.update_default_node_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.update_dna.rst", "api/generated/compas_bender.datastructures.BendNetwork.uv_index.rst", "api/generated/compas_bender.datastructures.BendNetwork.validate_data.rst", "api/generated/compas_bender.datastructures.BendNetwork.validate_json.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.build.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.build_as.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.clear.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_edgelabels.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_edges.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_layer.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_nodelabels.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.clear_nodes.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_axial.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_collection.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_edgelabels.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_edges.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_nodelabels.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_nodes.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.draw_reactions.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.redraw.rst", "api/generated/compas_bender.rhino.BendNetworkArtist.register.rst", "examples.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "compas_bender", "bender", "datastructures", "rhino", "bend_splines", "BendNetwork", "BendNetwork.ToString", "BendNetwork.add_edge", "BendNetwork.add_node", "BendNetwork.adjacency_matrix", "BendNetwork.clear", "BendNetwork.complement", "BendNetwork.connected_edges", "BendNetwork.connectivity_matrix", "BendNetwork.copy", "BendNetwork.count_crossings", "BendNetwork.degree", "BendNetwork.degree_in", "BendNetwork.degree_matrix", "BendNetwork.degree_out", "BendNetwork.delete_edge", "BendNetwork.delete_node", "BendNetwork.edge_attribute", "BendNetwork.edge_attributes", "BendNetwork.edge_coordinates", "BendNetwork.edge_direction", "BendNetwork.edge_length", "BendNetwork.edge_line", "BendNetwork.edge_midpoint", "BendNetwork.edge_point", "BendNetwork.edge_sample", "BendNetwork.edge_vector", "BendNetwork.edges", "BendNetwork.edges_attribute", "BendNetwork.edges_attributes", "BendNetwork.edges_where", "BendNetwork.edges_where_predicate", "BendNetwork.embed_in_plane", "BendNetwork.find_crossings", "BendNetwork.find_cycles", "BendNetwork.from_data", "BendNetwork.from_edges", "BendNetwork.from_json", "BendNetwork.from_jsonstring", "BendNetwork.from_lines", "BendNetwork.from_networkx", "BendNetwork.from_nodes_and_edges", "BendNetwork.from_obj", "BendNetwork.from_pointcloud", "BendNetwork.get_any_edge", "BendNetwork.get_any_edges", "BendNetwork.get_any_node", "BendNetwork.get_any_nodes", "BendNetwork.gkey_key", "BendNetwork.gkey_node", "BendNetwork.has_edge", "BendNetwork.has_node", "BendNetwork.index_key", "BendNetwork.index_uv", "BendNetwork.is_connected", "BendNetwork.is_crossed", "BendNetwork.is_leaf", "BendNetwork.is_node_connected", "BendNetwork.is_planar", "BendNetwork.is_planar_embedding", "BendNetwork.is_xy", "BendNetwork.key_gkey", "BendNetwork.key_index", "BendNetwork.laplacian_matrix", "BendNetwork.leaves", "BendNetwork.neighborhood", "BendNetwork.neighbors", "BendNetwork.neighbors_in", "BendNetwork.neighbors_out", "BendNetwork.network_adjacency_matrix", "BendNetwork.network_connectivity_matrix", "BendNetwork.network_degree_matrix", "BendNetwork.network_embed_in_plane", "BendNetwork.network_is_planar", "BendNetwork.network_is_planar_embedding", "BendNetwork.network_laplacian_matrix", "BendNetwork.node_attribute", "BendNetwork.node_attributes", "BendNetwork.node_coordinates", "BendNetwork.node_gkey", "BendNetwork.node_laplacian", "BendNetwork.node_neighborhood_centroid", "BendNetwork.node_point", "BendNetwork.node_reaction", "BendNetwork.node_residual", "BendNetwork.node_sample", "BendNetwork.nodes", "BendNetwork.nodes_attribute", "BendNetwork.nodes_attributes", "BendNetwork.nodes_where", "BendNetwork.nodes_where_predicate", "BendNetwork.number_of_edges", "BendNetwork.number_of_nodes", "BendNetwork.sha256", "BendNetwork.shortest_path", "BendNetwork.smooth", "BendNetwork.split_edge", "BendNetwork.summary", "BendNetwork.to_data", "BendNetwork.to_json", "BendNetwork.to_jsonstring", "BendNetwork.to_lines", "BendNetwork.to_networkx", "BendNetwork.to_nodes_and_edges", "BendNetwork.to_obj", "BendNetwork.to_points", "BendNetwork.transform", "BendNetwork.transformed", "BendNetwork.unset_edge_attribute", "BendNetwork.unset_node_attribute", "BendNetwork.update_dea", "BendNetwork.update_default_edge_attributes", "BendNetwork.update_default_node_attributes", "BendNetwork.update_dna", "BendNetwork.uv_index", "BendNetwork.validate_data", "BendNetwork.validate_json", "BendNetworkArtist", "BendNetworkArtist.build", "BendNetworkArtist.build_as", "BendNetworkArtist.clear", "BendNetworkArtist.clear_edgelabels", "BendNetworkArtist.clear_edges", "BendNetworkArtist.clear_layer", "BendNetworkArtist.clear_nodelabels", "BendNetworkArtist.clear_nodes", "BendNetworkArtist.draw", "BendNetworkArtist.draw_axial", "BendNetworkArtist.draw_collection", "BendNetworkArtist.draw_edgelabels", "BendNetworkArtist.draw_edges", "BendNetworkArtist.draw_nodelabels", "BendNetworkArtist.draw_nodes", "BendNetworkArtist.draw_reactions", "BendNetworkArtist.redraw", "BendNetworkArtist.register", "Examples", "compas_bender", "Installation", "License", "Tutorial"], "terms": {"compas_bend": [0, 5, 6, 123], "bender": [1, 5, 143], "datastructur": [1, 6, 10, 12, 14, 19, 60, 69, 75, 76, 77, 81, 99, 143], "rhino": [1, 7, 123, 132, 133, 135, 136, 137, 138, 139, 141, 143], "network": [5, 6, 10, 11, 12, 14, 16, 19, 21, 33, 38, 39, 40, 45, 47, 48, 49, 56, 57, 60, 61, 64, 65, 66, 69, 70, 75, 76, 77, 78, 79, 80, 81, 92, 100, 101, 107, 109, 110, 111, 112, 113, 132], "cabl": 5, "spline": 5, "config": 5, "none": [5, 8, 9, 11, 12, 15, 21, 22, 23, 24, 34, 35, 36, 38, 40, 45, 48, 54, 55, 67, 78, 82, 83, 85, 93, 94, 95, 101, 105, 110, 112, 114, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 140, 141], "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "class": [6, 7, 123], "base": [6, 123], "method": [6, 7, 123, 134], "inherit": [6, 123], "convert": [7, 104], "instanc": [7, 41, 42, 43, 44, 46, 108], "string": [7, 43, 44, 48, 54, 55, 67, 85, 105, 106, 110], "thi": [7, 15, 16, 39, 40, 41, 43, 44, 61, 64, 79, 126, 127, 128, 130, 131, 133, 139, 145], "exist": [7, 23, 24, 34, 35, 60, 64, 79, 82, 83, 93, 94, 114, 115], "net": 7, "compat": [7, 141], "when": [7, 23, 82], "us": [7, 9, 23, 24, 34, 35, 37, 38, 40, 45, 48, 50, 51, 52, 53, 54, 55, 64, 67, 69, 78, 79, 81, 82, 83, 85, 93, 94, 96, 99, 124, 132, 145], "ironpython": 7, "implicit": 7, "convers": 7, "usual": 7, "take": [7, 37, 40, 96], "place": [7, 112], "cpython": 7, "kick": 7, "its": [7, 8, 9, 33, 36, 37, 86, 95, 96, 101, 102, 104, 121, 122, 135, 137], "default": [7, 9, 15, 114, 115, 116, 117, 118, 119, 132, 133, 135, 136, 137, 138, 139], "print": 7, "self": 7, "gettyp": 7, "fullnam": 7, "similar": 7, "overrid": 7, "object": [7, 10, 15, 16, 19, 23, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 61, 64, 65, 66, 75, 77, 78, 79, 80, 101, 104, 105, 106, 110, 121, 122, 126, 132, 133, 134, 135, 136, 137, 138, 139], "fix": [7, 38, 78, 101], "make": [7, 15], "grasshopp": [7, 141], "displai": 7, "proper": 7, "represent": [7, 104, 105, 106, 122], "ar": [7, 40, 102, 132, 136, 138], "connect": [7, 13, 14, 45, 48, 49, 53, 60, 63, 76, 145], "panel": 7, "other": [7, 145], "type": [7, 9, 15, 40, 41, 43, 44, 124, 125, 141], "output": 7, "u": [8, 12, 21, 25, 26, 27, 29, 30, 32, 33, 36, 37, 56, 102], "v": [8, 12, 21, 25, 26, 27, 29, 30, 32, 33, 36, 37, 56, 102], "attr_dict": [8, 9, 116, 117, 118, 119], "kwattr": [8, 9, 116, 117, 118, 119], "add": [8, 9], "an": [8, 9, 15, 21, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 37, 40, 41, 43, 44, 48, 64, 79, 82, 93, 94, 104, 105, 106, 110, 114, 124, 125, 134, 141, 145], "edg": [8, 12, 13, 16, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 42, 47, 50, 51, 53, 56, 59, 61, 64, 65, 79, 80, 97, 102, 109, 114, 116, 117, 120, 127, 128, 132, 133, 135, 136], "specifi": [8, 9, 47, 54, 55, 67, 85], "attribut": [8, 9, 23, 24, 33, 34, 35, 36, 37, 82, 83, 92, 93, 94, 95, 96, 114, 115, 116, 117, 118, 119], "paramet": [8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 132, 133, 135, 136, 137, 138, 139, 141], "hashabl": [8, 9, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 68, 70, 71, 72, 73, 74, 78, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 100, 102, 109, 114, 120], "The": [8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 67, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 121, 122, 124, 125, 132, 133, 135, 136, 137, 138, 139, 141, 145], "identifi": [8, 9, 13, 17, 18, 20, 21, 22, 23, 24, 31, 33, 34, 35, 36, 37, 39, 42, 50, 51, 52, 53, 56, 57, 62, 63, 68, 70, 71, 72, 73, 74, 82, 83, 84, 86, 87, 91, 92, 93, 94, 95, 96, 100, 114, 115, 133, 139], "first": [8, 21, 56, 102], "node": [8, 9, 10, 13, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 37, 42, 47, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 100, 101, 102, 109, 115, 118, 119, 130, 131, 132, 137, 138, 139], "second": [8, 21, 56, 102], "dict": [8, 9, 24, 33, 35, 36, 37, 41, 47, 54, 55, 58, 59, 67, 68, 83, 85, 92, 94, 95, 96, 104, 106, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 132, 135, 136, 137, 138], "str": [8, 9, 23, 24, 25, 33, 34, 35, 36, 37, 44, 45, 48, 54, 55, 67, 82, 83, 84, 85, 92, 93, 94, 95, 96, 99, 102, 103, 106, 114, 115, 116, 117, 118, 119, 122, 124, 125, 135, 137], "ani": [8, 9, 12, 24, 33, 34, 35, 36, 37, 40, 83, 92, 93, 94, 95, 96, 116, 117, 118, 119, 124, 125, 145], "option": [8, 9, 10, 14, 15, 19, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 38, 40, 45, 48, 49, 53, 54, 55, 56, 67, 69, 71, 75, 76, 77, 78, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 99, 101, 102, 105, 106, 116, 117, 118, 119, 124, 125, 132, 133, 135, 136, 137, 138, 139, 141], "A": [8, 9, 12, 16, 24, 34, 35, 36, 38, 39, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 78, 79, 80, 83, 85, 93, 94, 95, 100, 101, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 132, 135, 136, 137, 138, 145], "dictionari": [8, 9, 24, 41, 47, 54, 55, 58, 59, 67, 68, 83, 85, 116, 117, 118, 119, 120, 135, 137], "addit": [8, 9, 33, 36, 37, 64, 79, 92, 95, 96, 116, 117, 118, 119], "compil": [8, 9, 116, 117, 118, 119], "remain": [8, 9, 116, 117, 118, 119], "name": [8, 9, 23, 24, 34, 35, 36, 82, 83, 93, 94, 95, 114, 115, 116, 117, 118, 119], "argument": [8, 9, 36, 101, 116, 117, 118, 119, 124, 125], "return": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141], "tupl": [8, 13, 23, 24, 31, 33, 34, 35, 36, 37, 39, 42, 45, 47, 50, 51, 59, 92, 95, 96, 107, 109, 114, 120, 132, 135, 136], "exampl": [8, 9, 12, 21, 22, 37, 40, 60, 96, 99, 143], "kei": [9, 13, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 36, 39, 47, 54, 55, 57, 58, 59, 62, 63, 67, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 102, 114, 115, 120, 135, 137], "which": [9, 25, 36, 37, 40, 95, 96, 132, 135, 136, 137, 138, 141], "case": [9, 132, 135, 136, 137, 138], "int": [9, 16, 17, 18, 20, 31, 49, 51, 53, 58, 59, 68, 71, 91, 97, 98, 101, 115, 120, 132, 135, 136, 137, 138], "i": [9, 12, 23, 24, 30, 33, 34, 35, 36, 37, 38, 40, 45, 48, 56, 57, 60, 62, 63, 64, 65, 66, 69, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 101, 102, 112, 113, 120, 124, 132, 133, 135, 136, 137, 138, 139, 145], "automat": 9, "gener": [9, 12], "vertex": [9, 39, 40, 50, 59, 120], "note": [9, 16, 39, 40, 60, 61, 62, 64, 69, 79, 81, 112, 113, 114, 115], "If": [9, 23, 24, 30, 33, 34, 35, 36, 37, 38, 53, 56, 64, 69, 78, 79, 81, 82, 83, 92, 93, 94, 95, 96, 99, 101, 102, 105, 106, 114, 115], "provid": [9, 24, 36, 41, 94, 101, 124, 145], "one": [9, 53, 61, 62], "increment": 9, "highest": 9, "integ": 9, "1": [9, 12, 30, 31, 50, 51, 52, 53, 69, 71, 81, 86, 91, 99, 102, 133, 139], "graph": [9, 12, 22, 42, 46, 97, 98, 103, 108], "0": [9, 30, 99, 101, 102, 133, 139], "rtype": [10, 14, 19, 69, 75, 76, 77, 81], "arrai": [10, 14, 19, 68, 69, 75, 76, 77, 81, 120], "creat": [10, 14, 19, 42, 46, 75, 76, 77, 108, 124, 132, 135, 136, 137, 138], "adjac": [10, 75], "matrix": [10, 14, 19, 69, 75, 76, 77, 81], "from": [10, 12, 14, 19, 21, 22, 32, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 60, 69, 75, 76, 77, 81, 86, 99, 100, 108, 145], "obj": [10, 12, 19, 23, 34, 48, 60, 75, 77, 82, 93, 99, 110], "get": [10, 12, 19, 23, 24, 31, 34, 35, 36, 37, 50, 51, 52, 53, 60, 75, 77, 82, 83, 91, 93, 94, 95, 96, 99], "data": [10, 11, 14, 15, 19, 33, 36, 37, 41, 43, 44, 48, 60, 69, 75, 76, 77, 81, 92, 95, 96, 99, 100, 104, 105, 106, 121, 122, 141], "liter": [10, 14, 19, 69, 75, 76, 77, 81, 141], "csc": [10, 14, 19, 69, 75, 76, 77, 81], "csr": [10, 14, 19, 69, 75, 76, 77, 81], "coo": [10, 14, 19, 69, 75, 76, 77, 81], "list": [10, 13, 14, 19, 24, 25, 26, 29, 30, 31, 32, 34, 35, 39, 40, 42, 45, 47, 51, 53, 58, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 83, 84, 86, 87, 91, 93, 94, 100, 101, 107, 109, 111, 120, 124, 125, 132, 133, 135, 136, 137, 138, 139], "format": [10, 14, 19, 54, 55, 67, 69, 75, 76, 77, 81, 85, 99, 103, 106], "result": [10, 14, 19, 69, 75, 76, 77, 81], "array_lik": [10, 14, 19, 69, 75, 76, 77, 81], "construct": [10, 14, 19, 41, 43, 44, 45, 47, 48, 49, 69, 75, 76, 77, 81], "all": [11, 24, 35, 39, 66, 70, 83, 126, 127, 128, 130, 131, 132, 136, 138, 145], "cl": [12, 15], "g": 12, "h": 12, "same": [12, 40], "vertic": [12, 40, 60, 66, 111], "whose": 12, "consist": 12, "present": [12, 56, 57], "refer": [12, 143], "wolfram": 12, "mathworld": 12, "avail": [12, 64, 79], "http": [12, 64, 79], "com": 12, "graphcompl": 12, "html": 12, "import": [12, 60, 99], "compa": [12, 60, 99, 143], "network_compl": 12, "from_obj": [12, 60, 99], "line": [12, 38, 40, 45, 48, 60, 64, 78, 79, 107], "has_edg": 12, "direct": [12, 26, 30, 40, 46, 56], "fals": [12, 33, 36, 37, 38, 53, 56, 57, 60, 61, 62, 63, 64, 66, 69, 78, 79, 81, 92, 95, 96, 99, 105, 106], "structur": [14, 40, 60, 69, 76, 81, 100, 143], "independ": [15, 113], "current": [15, 69, 81], "count": 16, "number": [16, 17, 18, 20, 49, 51, 53, 97, 98, 101], "cross": [16, 39, 61, 64, 65, 79, 80], "pair": [16, 23, 24, 36, 39, 42, 45, 50, 54, 55, 58, 59, 61, 67, 68, 83, 85, 95, 107, 109, 120, 124, 135, 137, 141], "algorithm": [16, 39, 40, 61, 99], "assum": [16, 39, 61], "li": [16, 39, 61, 66], "xy": [16, 39, 61, 66], "plane": [16, 38, 39, 61, 64, 65, 66, 78, 79, 80], "neighbor": [17, 18, 20, 40, 62, 73, 74, 87, 101, 102], "numer": 18, "incom": [18, 73], "degre": [19, 49, 77], "outgo": [20, 74], "delet": [21, 22, 126, 127, 128, 130, 131], "valu": [23, 24, 30, 34, 35, 36, 69, 81, 82, 83, 93, 94, 95, 114, 115, 116, 117, 118, 119, 135, 137], "set": [23, 24, 31, 34, 35, 36, 37, 45, 51, 53, 82, 83, 91, 93, 94, 95, 96, 114, 115, 132], "function": [23, 24, 34, 35, 36, 37, 64, 79, 82, 83, 93, 94, 96, 101], "setter": [23, 24, 34, 35, 82, 83, 93, 94], "rais": [23, 24, 34, 35, 38, 64, 78, 79, 82, 83, 93, 94, 101, 102, 114, 115, 121, 122], "keyerror": [23, 24, 34, 35, 82, 83, 93, 94, 114, 115], "doe": [23, 24, 34, 35, 82, 83, 93, 94, 114, 115], "multipl": [24, 34, 35, 83, 93, 94], "empti": [24, 35, 83], "correspond": [24, 35, 54, 55, 59, 67, 68, 83, 85, 94, 120, 124, 133, 141], "ax": [25, 84], "xyz": [25, 29, 30, 69, 81, 84, 109], "coordin": [25, 29, 30, 45, 47, 66, 84, 87, 107, 109, 111], "start": [25, 26, 27, 29, 30, 32, 45, 100, 107], "end": [25, 26, 27, 29, 30, 32, 45, 100, 107], "point": [25, 30, 38, 45, 47, 48, 49, 69, 78, 81, 107, 110], "along": [25, 30, 102], "should": [25, 36, 37, 40, 95, 96, 141], "includ": [25, 145], "float": [25, 26, 27, 29, 30, 32, 45, 47, 54, 55, 67, 84, 85, 86, 87, 101, 102, 107, 109, 111, 133, 139], "vector": [26, 30, 32, 69, 81, 86, 139], "length": [27, 102, 139], "locat": [29, 30], "midpoint": 29, "t": [30, 102], "5": [30, 101, 102], "outsid": [30, 40], "rang": [30, 36, 95, 102], "lie": 30, "size": [31, 71, 91], "random": [31, 49, 50, 51, 52, 53, 91], "sampl": [31, 91], "iter": [33, 92, 101], "over": [33, 92], "bool": [33, 36, 37, 38, 53, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 78, 79, 80, 81, 92, 95, 96, 99, 105, 106], "true": [33, 36, 37, 38, 53, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 78, 79, 80, 81, 92, 95, 96, 99, 105, 106], "yield": [33, 36, 37, 92, 95, 96], "next": [33, 36, 37, 92, 95, 96], "attr": [33, 36, 37, 92], "contain": [34, 35, 41, 43, 44, 48, 56, 94, 105], "per": [34, 35, 49, 94], "request": [34, 35, 83], "condit": [36, 37, 95, 96, 145], "kwarg": [36, 95, 123, 124, 125], "certain": [36, 37, 54, 55, 67, 85, 95, 96], "form": [36, 50, 95, 143], "can": [36, 64, 79, 95], "min": [36, 95], "max": [36, 95], "predic": [37, 96], "lambda": [37, 96], "callabl": [37, 96, 101], "you": [37, 96], "want": [37, 96], "evalu": [37, 96], "2": [37, 96], "straightlin": [38, 78], "emb": [38, 78], "two": [38, 39, 60, 78, 100], "straight": [38, 40, 64, 78, 79], "onli": [38, 53, 62, 78], "embed": [38, 40, 64, 65, 78, 79, 80], "wa": [38, 78], "success": [38, 78], "otherwis": [38, 56, 60, 61, 64, 65, 66, 78, 79, 80, 145], "importerror": [38, 64, 78, 79], "networkx": [38, 46, 78, 108], "instal": [38, 64, 78, 79, 143], "each": [39, 40, 93, 107, 109], "repres": [39, 45, 109], "breakpoint": 40, "find": [40, 100, 143], "face": [40, 99], "break": 40, "found": 40, "primarili": 40, "up": [40, 67, 85], "between": [40, 49, 100], "specif": [40, 56, 57, 63], "For": [40, 124, 125], "applic": 40, "involv": 40, "dual": 40, "diagram": 40, "where": 40, "extern": 40, "forc": [40, 133, 139], "appli": 40, "load": 40, "reaction": [40, 139], "input": 40, "essenti": 40, "wall": 40, "follow": [40, 145], "maze": 40, "solv": 40, "It": [40, 64, 79], "reli": 40, "geometri": 40, "repes": 40, "planar": [40, 64, 79], "determin": 40, "order": 40, "around": [40, 133], "alwai": 40, "turn": 40, "classmethod": [41, 42, 43, 44, 45, 46, 47, 48, 49], "ha": [41, 43, 44, 61, 62], "correct": [41, 43, 44], "schema": [41, 43, 44, 104, 121, 122], "new": [42, 46, 108], "inform": 42, "about": 42, "filepath": [43, 48, 105, 110], "serial": [43, 44, 105, 106], "json": [43, 44, 105, 106, 122], "file": [43, 44, 48, 105, 110, 145], "path": [43, 48, 60, 100, 105, 110], "like": [43, 48, 105, 110], "url": [43, 48], "precis": [45, 48, 54, 55, 67, 85], "geometr": [45, 48, 54, 55, 67, 85], "map": [45, 48, 54, 55, 58, 59, 67, 68, 85, 120, 124], "digraph": [46, 108], "hshabl": 47, "cloud": 49, "3": [49, 50, 51, 52, 53, 133, 139], "pointcloud": 49, "deprec": [50, 51, 52, 53], "sinc": [50, 51, 52, 53], "version": [50, 51, 52, 53, 99], "13": [50, 51, 52, 53], "edge_sampl": [50, 51], "instead": [50, 51, 52, 53, 113], "n": [51, 53, 91], "node_sampl": [52, 53], "exclude_leav": 53, "exclud": 53, "leav": 53, "verifi": [56, 57, 60, 61, 62, 63, 65, 66, 80], "taken": 56, "account": 56, "indic": [58, 109], "index": [58, 59, 68, 120, 143], "uv": [59, 120], "everi": [60, 101, 135, 137], "them": 60, "network_is_connect": 60, "least": 61, "leaf": 62, "check": [64, 79], "packag": [64, 79, 143], "drawn": [64, 79, 126, 127, 128, 130, 131, 132, 133, 136, 138, 139], "without": [64, 65, 79, 80, 145], "shown": [64, 79], "furthermor": [64, 79], "python": [64, 79], "bind": [64, 79], "suit": [64, 79], "anaconda": [64, 79], "org": [64, 79], "conda": [64, 79], "forg": [64, 79], "fase": [65, 80], "z": [66, 99], "zero": 66, "normal": [69, 81], "laplacian": [69, 81, 86], "entri": [69, 81], "diagon": [69, 81], "d": [69, 81], "l": [69, 81], "dot": [69, 81], "centroid": [69, 81, 86, 87, 101], "therefor": [69, 81], "c": [69, 81], "By": [69, 81], "chang": [69, 81], "sign": [69, 81], "dsiplac": [69, 81], "could": [69, 81], "more": [69, 81], "natur": [69, 81], "wai": [69, 81], "ring": [71, 86], "compon": 84, "neighborhood": 86, "comput": [87, 97, 98, 99], "match": [95, 96, 124, 125], "as_str": 99, "hash": 99, "comparison": 99, "dure": 99, "control": 99, "digest": 99, "hexadecim": 99, "rather": 99, "than": [99, 133, 139], "byte": 99, "mesh": [99, 101], "v1": 99, "v2": 99, "vertex_attribut": 99, "vertex_sampl": 99, "v3": 99, "shortest": 100, "lead": 100, "kmax": 101, "100": 101, "damp": 101, "callback": 101, "callback_arg": 101, "move": 101, "free": [101, 145], "maximum": 101, "factor": 101, "user": 101, "defin": [101, 107], "execut": 101, "after": [101, 133, 139], "pass": 101, "except": [101, 102, 122], "split": 102, "insert": 102, "posit": 102, "valueerror": 102, "nativ": 104, "describ": 104, "pretti": [105, 106], "human": 105, "readabl": 105, "": [106, 121, 122], "newli": 108, "write": 110, "modifi": [112, 113, 145], "copi": [113, 145], "origin": 113, "unset": [114, 115], "implicitli": [114, 115], "back": [114, 115], "store": [114, 115], "updat": [116, 117, 118, 119], "e": 120, "valid": [121, 122], "against": [121, 122], "schemaerror": 121, "jsonschema": 122, "validationerror": 122, "item": [123, 124, 125, 141], "networkartist": [123, 132, 136, 138], "static": [124, 125, 134, 140, 141], "artist": [124, 125, 126, 127, 128, 129, 130, 131, 141], "keyword": [124, 125], "collect": [124, 125, 134], "relev": [124, 125], "see": [124, 125], "accord": 124, "item_artist": 124, "regist": 124, "artist_typ": [125, 141], "build": 125, "given": 125, "label": [127, 130, 135, 137], "clear": 129, "layer": 129, "nodecolor": 132, "edgecolor": 132, "chosen": 132, "visualis": 132, "color": [132, 136, 138], "default_nodecolor": [132, 138], "default_edgecolor": [132, 136], "system": [132, 135, 136, 137, 138], "guid": [132, 133, 135, 136, 137, 138, 139], "scale": [133, 139], "tol": [133, 139], "001": [133, 139], "draw": [133, 134, 135, 136, 137, 138, 139], "axial": 133, "cylind": 133, "radiu": 133, "smaller": [133, 139], "toler": [133, 139], "1e": [133, 139], "were": [133, 139], "ad": [133, 139], "model": [133, 139], "space": [133, 139], "entir": 134, "text": [135, 137], "select": [135, 136, 137, 138], "edgelabel": 135, "anchor": 139, "view": 140, "item_typ": 141, "context": 141, "blender": 141, "plotter": 141, "visual": 141, "extens": 143, "bend": 143, "activ": 143, "introduct": 143, "tutori": 143, "api": 143, "licens": 143, "modul": 143, "mit": 145, "eth": 145, "zurich": 145, "block": 145, "research": 145, "group": 145, "permiss": 145, "herebi": 145, "grant": 145, "charg": 145, "person": 145, "obtain": 145, "softwar": 145, "associ": 145, "document": 145, "deal": 145, "restrict": 145, "limit": 145, "right": 145, "merg": 145, "publish": 145, "distribut": 145, "sublicens": 145, "sell": 145, "permit": 145, "whom": 145, "furnish": 145, "do": 145, "so": 145, "subject": 145, "abov": 145, "copyright": 145, "notic": 145, "shall": 145, "substanti": 145, "portion": 145, "THE": 145, "AS": 145, "warranti": 145, "OF": 145, "kind": 145, "express": 145, "OR": 145, "impli": 145, "BUT": 145, "NOT": 145, "TO": 145, "merchant": 145, "fit": 145, "FOR": 145, "particular": 145, "purpos": 145, "AND": 145, "noninfring": 145, "IN": 145, "NO": 145, "event": 145, "author": 145, "holder": 145, "BE": 145, "liabl": 145, "claim": 145, "damag": 145, "liabil": 145, "whether": 145, "action": 145, "contract": 145, "tort": 145, "aris": 145, "out": 145, "WITH": 145}, "objects": {"": [[1, 0, 0, "-", "compas_bender"]], "compas_bender": [[2, 0, 0, "-", "bender"], [3, 0, 0, "-", "datastructures"], [4, 0, 0, "-", "rhino"]], "compas_bender.bender": [[5, 1, 1, "", "bend_splines"]], "compas_bender.datastructures": [[6, 2, 1, "", "BendNetwork"]], "compas_bender.datastructures.BendNetwork": [[7, 3, 1, "", "ToString"], [8, 3, 1, "", "add_edge"], [9, 3, 1, "", "add_node"], [10, 3, 1, "", "adjacency_matrix"], [11, 3, 1, "", "clear"], [12, 3, 1, "", "complement"], [13, 3, 1, "", "connected_edges"], [14, 3, 1, "", "connectivity_matrix"], [15, 3, 1, "", "copy"], [16, 3, 1, "", "count_crossings"], [17, 3, 1, "", "degree"], [18, 3, 1, "", "degree_in"], [19, 3, 1, "", "degree_matrix"], [20, 3, 1, "", "degree_out"], [21, 3, 1, "", "delete_edge"], [22, 3, 1, "", "delete_node"], [23, 3, 1, "", "edge_attribute"], [24, 3, 1, "", "edge_attributes"], [25, 3, 1, "", "edge_coordinates"], [26, 3, 1, "", "edge_direction"], [27, 3, 1, "", "edge_length"], [28, 3, 1, "", "edge_line"], [29, 3, 1, "", "edge_midpoint"], [30, 3, 1, "", "edge_point"], [31, 3, 1, "", "edge_sample"], [32, 3, 1, "", "edge_vector"], [33, 3, 1, "", "edges"], [34, 3, 1, "", "edges_attribute"], [35, 3, 1, "", "edges_attributes"], [36, 3, 1, "", "edges_where"], [37, 3, 1, "", "edges_where_predicate"], [38, 3, 1, "", "embed_in_plane"], [39, 3, 1, "", "find_crossings"], [40, 3, 1, "", "find_cycles"], [41, 3, 1, "", "from_data"], [42, 3, 1, "", "from_edges"], [43, 3, 1, "", "from_json"], [44, 3, 1, "", "from_jsonstring"], [45, 3, 1, "", "from_lines"], [46, 3, 1, "", "from_networkx"], [47, 3, 1, "", "from_nodes_and_edges"], [48, 3, 1, "", "from_obj"], [49, 3, 1, "", "from_pointcloud"], [50, 3, 1, "", "get_any_edge"], [51, 3, 1, "", "get_any_edges"], [52, 3, 1, "", "get_any_node"], [53, 3, 1, "", "get_any_nodes"], [54, 3, 1, "", "gkey_key"], [55, 3, 1, "", "gkey_node"], [56, 3, 1, "", "has_edge"], [57, 3, 1, "", "has_node"], [58, 3, 1, "", "index_key"], [59, 3, 1, "", "index_uv"], [60, 3, 1, "", "is_connected"], [61, 3, 1, "", "is_crossed"], [62, 3, 1, "", "is_leaf"], [63, 3, 1, "", "is_node_connected"], [64, 3, 1, "", "is_planar"], [65, 3, 1, "", "is_planar_embedding"], [66, 3, 1, "", "is_xy"], [67, 3, 1, "", "key_gkey"], [68, 3, 1, "", "key_index"], [69, 3, 1, "", "laplacian_matrix"], [70, 3, 1, "", "leaves"], [71, 3, 1, "", "neighborhood"], [72, 3, 1, "", "neighbors"], [73, 3, 1, "", "neighbors_in"], [74, 3, 1, "", "neighbors_out"], [75, 3, 1, "", "network_adjacency_matrix"], [76, 3, 1, "", "network_connectivity_matrix"], [77, 3, 1, "", "network_degree_matrix"], [78, 3, 1, "", "network_embed_in_plane"], [79, 3, 1, "", "network_is_planar"], [80, 3, 1, "", "network_is_planar_embedding"], [81, 3, 1, "", "network_laplacian_matrix"], [82, 3, 1, "", "node_attribute"], [83, 3, 1, "", "node_attributes"], [84, 3, 1, "", "node_coordinates"], [85, 3, 1, "", "node_gkey"], [86, 3, 1, "", "node_laplacian"], [87, 3, 1, "", "node_neighborhood_centroid"], [88, 3, 1, "", "node_point"], [89, 3, 1, "", "node_reaction"], [90, 3, 1, "", "node_residual"], [91, 3, 1, "", "node_sample"], [92, 3, 1, "", "nodes"], [93, 3, 1, "", "nodes_attribute"], [94, 3, 1, "", "nodes_attributes"], [95, 3, 1, "", "nodes_where"], [96, 3, 1, "", "nodes_where_predicate"], [97, 3, 1, "", "number_of_edges"], [98, 3, 1, "", "number_of_nodes"], [99, 3, 1, "", "sha256"], [100, 3, 1, "", "shortest_path"], [101, 3, 1, "", "smooth"], [102, 3, 1, "", "split_edge"], [103, 3, 1, "", "summary"], [104, 3, 1, "", "to_data"], [105, 3, 1, "", "to_json"], [106, 3, 1, "", "to_jsonstring"], [107, 3, 1, "", "to_lines"], [108, 3, 1, "", "to_networkx"], [109, 3, 1, "", "to_nodes_and_edges"], [110, 3, 1, "", "to_obj"], [111, 3, 1, "", "to_points"], [112, 3, 1, "", "transform"], [113, 3, 1, "", "transformed"], [114, 3, 1, "", "unset_edge_attribute"], [115, 3, 1, "", "unset_node_attribute"], [116, 3, 1, "", "update_dea"], [117, 3, 1, "", "update_default_edge_attributes"], [118, 3, 1, "", "update_default_node_attributes"], [119, 3, 1, "", "update_dna"], [120, 3, 1, "", "uv_index"], [121, 3, 1, "", "validate_data"], [122, 3, 1, "", "validate_json"]], "compas_bender.rhino": [[123, 2, 1, "", "BendNetworkArtist"]], "compas_bender.rhino.BendNetworkArtist": [[124, 3, 1, "", "build"], [125, 3, 1, "", "build_as"], [126, 3, 1, "", "clear"], [127, 3, 1, "", "clear_edgelabels"], [128, 3, 1, "", "clear_edges"], [129, 3, 1, "", "clear_layer"], [130, 3, 1, "", "clear_nodelabels"], [131, 3, 1, "", "clear_nodes"], [132, 3, 1, "", "draw"], [133, 3, 1, "", "draw_axial"], [134, 3, 1, "", "draw_collection"], [135, 3, 1, "", "draw_edgelabels"], [136, 3, 1, "", "draw_edges"], [137, 3, 1, "", "draw_nodelabels"], [138, 3, 1, "", "draw_nodes"], [139, 3, 1, "", "draw_reactions"], [140, 3, 1, "", "redraw"], [141, 3, 1, "", "register"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "compas_bend": [1, 143], "bender": 2, "function": 2, "datastructur": 3, "class": [3, 4], "rhino": 4, "bend_splin": 5, "bendnetwork": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "tostr": 7, "add_edg": 8, "add_nod": 9, "adjacency_matrix": 10, "clear": [11, 126], "complement": 12, "connected_edg": 13, "connectivity_matrix": 14, "copi": 15, "count_cross": 16, "degre": 17, "degree_in": 18, "degree_matrix": 19, "degree_out": 20, "delete_edg": 21, "delete_nod": 22, "edge_attribut": [23, 24], "edge_coordin": 25, "edge_direct": 26, "edge_length": 27, "edge_lin": 28, "edge_midpoint": 29, "edge_point": 30, "edge_sampl": 31, "edge_vector": 32, "edg": 33, "edges_attribut": [34, 35], "edges_wher": 36, "edges_where_pred": 37, "embed_in_plan": 38, "find_cross": 39, "find_cycl": 40, "from_data": 41, "from_edg": 42, "from_json": 43, "from_jsonstr": 44, "from_lin": 45, "from_networkx": 46, "from_nodes_and_edg": 47, "from_obj": 48, "from_pointcloud": 49, "get_any_edg": [50, 51], "get_any_nod": [52, 53], "gkey_kei": 54, "gkey_nod": 55, "has_edg": 56, "has_nod": 57, "index_kei": 58, "index_uv": 59, "is_connect": 60, "is_cross": 61, "is_leaf": 62, "is_node_connect": 63, "is_planar": 64, "is_planar_embed": 65, "is_xi": 66, "key_gkei": 67, "key_index": 68, "laplacian_matrix": 69, "leav": 70, "neighborhood": 71, "neighbor": 72, "neighbors_in": 73, "neighbors_out": 74, "network_adjacency_matrix": 75, "network_connectivity_matrix": 76, "network_degree_matrix": 77, "network_embed_in_plan": 78, "network_is_planar": 79, "network_is_planar_embed": 80, "network_laplacian_matrix": 81, "node_attribut": [82, 83], "node_coordin": 84, "node_gkei": 85, "node_laplacian": 86, "node_neighborhood_centroid": 87, "node_point": 88, "node_react": 89, "node_residu": 90, "node_sampl": 91, "node": 92, "nodes_attribut": [93, 94], "nodes_wher": 95, "nodes_where_pred": 96, "number_of_edg": 97, "number_of_nod": 98, "sha256": 99, "shortest_path": 100, "smooth": 101, "split_edg": 102, "summari": 103, "to_data": 104, "to_json": 105, "to_jsonstr": 106, "to_lin": 107, "to_networkx": 108, "to_nodes_and_edg": 109, "to_obj": 110, "to_point": 111, "transform": [112, 113], "unset_edge_attribut": 114, "unset_node_attribut": 115, "update_dea": 116, "update_default_edge_attribut": 117, "update_default_node_attribut": 118, "update_dna": 119, "uv_index": 120, "validate_data": 121, "validate_json": 122, "bendnetworkartist": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "build": 124, "build_a": 125, "clear_edgelabel": 127, "clear_edg": 128, "clear_lay": 129, "clear_nodelabel": 130, "clear_nod": 131, "draw": 132, "draw_axi": 133, "draw_collect": 134, "draw_edgelabel": 135, "draw_edg": 136, "draw_nodelabel": 137, "draw_nod": 138, "draw_react": 139, "redraw": 140, "regist": 141, "exampl": 142, "tabl": 143, "content": 143, "indic": 143, "instal": 144, "licens": 145, "tutori": 146}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "compas_bender": [[1, "compas-bender"], [143, "compas-bender"]], "bender": [[2, "bender"]], "Functions": [[2, "functions"]], "datastructures": [[3, "datastructures"]], "Classes": [[3, "classes"], [4, "classes"]], "rhino": [[4, "rhino"]], "bend_splines": [[5, "bend-splines"]], "BendNetwork": [[6, "bendnetwork"]], "BendNetwork.ToString": [[7, "bendnetwork-tostring"]], "BendNetwork.add_edge": [[8, "bendnetwork-add-edge"]], "BendNetwork.add_node": [[9, "bendnetwork-add-node"]], "BendNetwork.adjacency_matrix": [[10, "bendnetwork-adjacency-matrix"]], "BendNetwork.clear": [[11, "bendnetwork-clear"]], "BendNetwork.complement": [[12, "bendnetwork-complement"]], "BendNetwork.connected_edges": [[13, "bendnetwork-connected-edges"]], "BendNetwork.connectivity_matrix": [[14, "bendnetwork-connectivity-matrix"]], "BendNetwork.copy": [[15, "bendnetwork-copy"]], "BendNetwork.count_crossings": [[16, "bendnetwork-count-crossings"]], "BendNetwork.degree": [[17, "bendnetwork-degree"]], "BendNetwork.degree_in": [[18, "bendnetwork-degree-in"]], "BendNetwork.degree_matrix": [[19, "bendnetwork-degree-matrix"]], "BendNetwork.degree_out": [[20, "bendnetwork-degree-out"]], "BendNetwork.delete_edge": [[21, "bendnetwork-delete-edge"]], "BendNetwork.delete_node": [[22, "bendnetwork-delete-node"]], "BendNetwork.edge_attribute": [[23, "bendnetwork-edge-attribute"]], "BendNetwork.edge_attributes": [[24, "bendnetwork-edge-attributes"]], "BendNetwork.edge_coordinates": [[25, "bendnetwork-edge-coordinates"]], "BendNetwork.edge_direction": [[26, "bendnetwork-edge-direction"]], "BendNetwork.edge_length": [[27, "bendnetwork-edge-length"]], "BendNetwork.edge_line": [[28, "bendnetwork-edge-line"]], "BendNetwork.edge_midpoint": [[29, "bendnetwork-edge-midpoint"]], "BendNetwork.edge_point": [[30, "bendnetwork-edge-point"]], "BendNetwork.edge_sample": [[31, "bendnetwork-edge-sample"]], "BendNetwork.edge_vector": [[32, "bendnetwork-edge-vector"]], "BendNetwork.edges": [[33, "bendnetwork-edges"]], "BendNetwork.edges_attribute": [[34, "bendnetwork-edges-attribute"]], "BendNetwork.edges_attributes": [[35, "bendnetwork-edges-attributes"]], "BendNetwork.edges_where": [[36, "bendnetwork-edges-where"]], "BendNetwork.edges_where_predicate": [[37, "bendnetwork-edges-where-predicate"]], "BendNetwork.embed_in_plane": [[38, "bendnetwork-embed-in-plane"]], "BendNetwork.find_crossings": [[39, "bendnetwork-find-crossings"]], "BendNetwork.find_cycles": [[40, "bendnetwork-find-cycles"]], "BendNetwork.from_data": [[41, "bendnetwork-from-data"]], "BendNetwork.from_edges": [[42, "bendnetwork-from-edges"]], "BendNetwork.from_json": [[43, "bendnetwork-from-json"]], "BendNetwork.from_jsonstring": [[44, "bendnetwork-from-jsonstring"]], "BendNetwork.from_lines": [[45, "bendnetwork-from-lines"]], "BendNetwork.from_networkx": [[46, "bendnetwork-from-networkx"]], "BendNetwork.from_nodes_and_edges": [[47, "bendnetwork-from-nodes-and-edges"]], "BendNetwork.from_obj": [[48, "bendnetwork-from-obj"]], "BendNetwork.from_pointcloud": [[49, "bendnetwork-from-pointcloud"]], "BendNetwork.get_any_edge": [[50, "bendnetwork-get-any-edge"]], "BendNetwork.get_any_edges": [[51, "bendnetwork-get-any-edges"]], "BendNetwork.get_any_node": [[52, "bendnetwork-get-any-node"]], "BendNetwork.get_any_nodes": [[53, "bendnetwork-get-any-nodes"]], "BendNetwork.gkey_key": [[54, "bendnetwork-gkey-key"]], "BendNetwork.gkey_node": [[55, "bendnetwork-gkey-node"]], "BendNetwork.has_edge": [[56, "bendnetwork-has-edge"]], "BendNetwork.has_node": [[57, "bendnetwork-has-node"]], "BendNetwork.index_key": [[58, "bendnetwork-index-key"]], "BendNetwork.index_uv": [[59, "bendnetwork-index-uv"]], "BendNetwork.is_connected": [[60, "bendnetwork-is-connected"]], "BendNetwork.is_crossed": [[61, "bendnetwork-is-crossed"]], "BendNetwork.is_leaf": [[62, "bendnetwork-is-leaf"]], "BendNetwork.is_node_connected": [[63, "bendnetwork-is-node-connected"]], "BendNetwork.is_planar": [[64, "bendnetwork-is-planar"]], "BendNetwork.is_planar_embedding": [[65, "bendnetwork-is-planar-embedding"]], "BendNetwork.is_xy": [[66, "bendnetwork-is-xy"]], "BendNetwork.key_gkey": [[67, "bendnetwork-key-gkey"]], "BendNetwork.key_index": [[68, "bendnetwork-key-index"]], "BendNetwork.laplacian_matrix": [[69, "bendnetwork-laplacian-matrix"]], "BendNetwork.leaves": [[70, "bendnetwork-leaves"]], "BendNetwork.neighborhood": [[71, "bendnetwork-neighborhood"]], "BendNetwork.neighbors": [[72, "bendnetwork-neighbors"]], "BendNetwork.neighbors_in": [[73, "bendnetwork-neighbors-in"]], "BendNetwork.neighbors_out": [[74, "bendnetwork-neighbors-out"]], "BendNetwork.network_adjacency_matrix": [[75, "bendnetwork-network-adjacency-matrix"]], "BendNetwork.network_connectivity_matrix": [[76, "bendnetwork-network-connectivity-matrix"]], "BendNetwork.network_degree_matrix": [[77, "bendnetwork-network-degree-matrix"]], "BendNetwork.network_embed_in_plane": [[78, "bendnetwork-network-embed-in-plane"]], "BendNetwork.network_is_planar": [[79, "bendnetwork-network-is-planar"]], "BendNetwork.network_is_planar_embedding": [[80, "bendnetwork-network-is-planar-embedding"]], "BendNetwork.network_laplacian_matrix": [[81, "bendnetwork-network-laplacian-matrix"]], "BendNetwork.node_attribute": [[82, "bendnetwork-node-attribute"]], "BendNetwork.node_attributes": [[83, "bendnetwork-node-attributes"]], "BendNetwork.node_coordinates": [[84, "bendnetwork-node-coordinates"]], "BendNetwork.node_gkey": [[85, "bendnetwork-node-gkey"]], "BendNetwork.node_laplacian": [[86, "bendnetwork-node-laplacian"]], "BendNetwork.node_neighborhood_centroid": [[87, "bendnetwork-node-neighborhood-centroid"]], "BendNetwork.node_point": [[88, "bendnetwork-node-point"]], "BendNetwork.node_reaction": [[89, "bendnetwork-node-reaction"]], "BendNetwork.node_residual": [[90, "bendnetwork-node-residual"]], "BendNetwork.node_sample": [[91, "bendnetwork-node-sample"]], "BendNetwork.nodes": [[92, "bendnetwork-nodes"]], "BendNetwork.nodes_attribute": [[93, "bendnetwork-nodes-attribute"]], "BendNetwork.nodes_attributes": [[94, "bendnetwork-nodes-attributes"]], "BendNetwork.nodes_where": [[95, "bendnetwork-nodes-where"]], "BendNetwork.nodes_where_predicate": [[96, "bendnetwork-nodes-where-predicate"]], "BendNetwork.number_of_edges": [[97, "bendnetwork-number-of-edges"]], "BendNetwork.number_of_nodes": [[98, "bendnetwork-number-of-nodes"]], "BendNetwork.sha256": [[99, "bendnetwork-sha256"]], "BendNetwork.shortest_path": [[100, "bendnetwork-shortest-path"]], "BendNetwork.smooth": [[101, "bendnetwork-smooth"]], "BendNetwork.split_edge": [[102, "bendnetwork-split-edge"]], "BendNetwork.summary": [[103, "bendnetwork-summary"]], "BendNetwork.to_data": [[104, "bendnetwork-to-data"]], "BendNetwork.to_json": [[105, "bendnetwork-to-json"]], "BendNetwork.to_jsonstring": [[106, "bendnetwork-to-jsonstring"]], "BendNetwork.to_lines": [[107, "bendnetwork-to-lines"]], "BendNetwork.to_networkx": [[108, "bendnetwork-to-networkx"]], "BendNetwork.to_nodes_and_edges": [[109, "bendnetwork-to-nodes-and-edges"]], "BendNetwork.to_obj": [[110, "bendnetwork-to-obj"]], "BendNetwork.to_points": [[111, "bendnetwork-to-points"]], "BendNetwork.transform": [[112, "bendnetwork-transform"]], "BendNetwork.transformed": [[113, "bendnetwork-transformed"]], "BendNetwork.unset_edge_attribute": [[114, "bendnetwork-unset-edge-attribute"]], "BendNetwork.unset_node_attribute": [[115, "bendnetwork-unset-node-attribute"]], "BendNetwork.update_dea": [[116, "bendnetwork-update-dea"]], "BendNetwork.update_default_edge_attributes": [[117, "bendnetwork-update-default-edge-attributes"]], "BendNetwork.update_default_node_attributes": [[118, "bendnetwork-update-default-node-attributes"]], "BendNetwork.update_dna": [[119, "bendnetwork-update-dna"]], "BendNetwork.uv_index": [[120, "bendnetwork-uv-index"]], "BendNetwork.validate_data": [[121, "bendnetwork-validate-data"]], "BendNetwork.validate_json": [[122, "bendnetwork-validate-json"]], "BendNetworkArtist": [[123, "bendnetworkartist"]], "BendNetworkArtist.build": [[124, "bendnetworkartist-build"]], "BendNetworkArtist.build_as": [[125, "bendnetworkartist-build-as"]], "BendNetworkArtist.clear": [[126, "bendnetworkartist-clear"]], "BendNetworkArtist.clear_edgelabels": [[127, "bendnetworkartist-clear-edgelabels"]], "BendNetworkArtist.clear_edges": [[128, "bendnetworkartist-clear-edges"]], "BendNetworkArtist.clear_layer": [[129, "bendnetworkartist-clear-layer"]], "BendNetworkArtist.clear_nodelabels": [[130, "bendnetworkartist-clear-nodelabels"]], "BendNetworkArtist.clear_nodes": [[131, "bendnetworkartist-clear-nodes"]], "BendNetworkArtist.draw": [[132, "bendnetworkartist-draw"]], "BendNetworkArtist.draw_axial": [[133, "bendnetworkartist-draw-axial"]], "BendNetworkArtist.draw_collection": [[134, "bendnetworkartist-draw-collection"]], "BendNetworkArtist.draw_edgelabels": [[135, "bendnetworkartist-draw-edgelabels"]], "BendNetworkArtist.draw_edges": [[136, "bendnetworkartist-draw-edges"]], "BendNetworkArtist.draw_nodelabels": [[137, "bendnetworkartist-draw-nodelabels"]], "BendNetworkArtist.draw_nodes": [[138, "bendnetworkartist-draw-nodes"]], "BendNetworkArtist.draw_reactions": [[139, "bendnetworkartist-draw-reactions"]], "BendNetworkArtist.redraw": [[140, "bendnetworkartist-redraw"]], "BendNetworkArtist.register": [[141, "bendnetworkartist-register"]], "Examples": [[142, "examples"]], "Table of Contents": [[143, "table-of-contents"]], "Indices and tables": [[143, "indices-and-tables"]], "Installation": [[144, "installation"]], "License": [[145, "license"]], "Tutorial": [[146, "tutorial"]]}, "indexentries": {"compas_bender": [[1, "module-compas_bender"]], "module": [[1, "module-compas_bender"], [2, "module-compas_bender.bender"], [3, "module-compas_bender.datastructures"], [4, "module-compas_bender.rhino"]], "compas_bender.bender": [[2, "module-compas_bender.bender"]], "compas_bender.datastructures": [[3, "module-compas_bender.datastructures"]], "compas_bender.rhino": [[4, "module-compas_bender.rhino"]], "bend_splines() (in module compas_bender.bender)": [[5, "compas_bender.bender.bend_splines"]], "bendnetwork (class in compas_bender.datastructures)": [[6, "compas_bender.datastructures.BendNetwork"]], "tostring() (compas_bender.datastructures.bendnetwork method)": [[7, "compas_bender.datastructures.BendNetwork.ToString"]], "add_edge() (compas_bender.datastructures.bendnetwork method)": [[8, "compas_bender.datastructures.BendNetwork.add_edge"]], "add_node() (compas_bender.datastructures.bendnetwork method)": [[9, "compas_bender.datastructures.BendNetwork.add_node"]], "adjacency_matrix() (compas_bender.datastructures.bendnetwork method)": [[10, "compas_bender.datastructures.BendNetwork.adjacency_matrix"]], "clear() (compas_bender.datastructures.bendnetwork method)": [[11, "compas_bender.datastructures.BendNetwork.clear"]], "complement() (compas_bender.datastructures.bendnetwork method)": [[12, "compas_bender.datastructures.BendNetwork.complement"]], "connected_edges() (compas_bender.datastructures.bendnetwork method)": [[13, "compas_bender.datastructures.BendNetwork.connected_edges"]], "connectivity_matrix() (compas_bender.datastructures.bendnetwork method)": [[14, "compas_bender.datastructures.BendNetwork.connectivity_matrix"]], "copy() (compas_bender.datastructures.bendnetwork method)": [[15, "compas_bender.datastructures.BendNetwork.copy"]], "count_crossings() (compas_bender.datastructures.bendnetwork method)": [[16, "compas_bender.datastructures.BendNetwork.count_crossings"]], "degree() (compas_bender.datastructures.bendnetwork method)": [[17, "compas_bender.datastructures.BendNetwork.degree"]], "degree_in() (compas_bender.datastructures.bendnetwork method)": [[18, "compas_bender.datastructures.BendNetwork.degree_in"]], "degree_matrix() (compas_bender.datastructures.bendnetwork method)": [[19, "compas_bender.datastructures.BendNetwork.degree_matrix"]], "degree_out() (compas_bender.datastructures.bendnetwork method)": [[20, "compas_bender.datastructures.BendNetwork.degree_out"]], "delete_edge() (compas_bender.datastructures.bendnetwork method)": [[21, "compas_bender.datastructures.BendNetwork.delete_edge"]], "delete_node() (compas_bender.datastructures.bendnetwork method)": [[22, "compas_bender.datastructures.BendNetwork.delete_node"]], "edge_attribute() (compas_bender.datastructures.bendnetwork method)": [[23, "compas_bender.datastructures.BendNetwork.edge_attribute"]], "edge_attributes() (compas_bender.datastructures.bendnetwork method)": [[24, "compas_bender.datastructures.BendNetwork.edge_attributes"]], "edge_coordinates() (compas_bender.datastructures.bendnetwork method)": [[25, "compas_bender.datastructures.BendNetwork.edge_coordinates"]], "edge_direction() (compas_bender.datastructures.bendnetwork method)": [[26, "compas_bender.datastructures.BendNetwork.edge_direction"]], "edge_length() (compas_bender.datastructures.bendnetwork method)": [[27, "compas_bender.datastructures.BendNetwork.edge_length"]], "edge_line() (compas_bender.datastructures.bendnetwork method)": [[28, "compas_bender.datastructures.BendNetwork.edge_line"]], "edge_midpoint() (compas_bender.datastructures.bendnetwork method)": [[29, "compas_bender.datastructures.BendNetwork.edge_midpoint"]], "edge_point() (compas_bender.datastructures.bendnetwork method)": [[30, "compas_bender.datastructures.BendNetwork.edge_point"]], "edge_sample() (compas_bender.datastructures.bendnetwork method)": [[31, "compas_bender.datastructures.BendNetwork.edge_sample"]], "edge_vector() (compas_bender.datastructures.bendnetwork method)": [[32, "compas_bender.datastructures.BendNetwork.edge_vector"]], "edges() (compas_bender.datastructures.bendnetwork method)": [[33, "compas_bender.datastructures.BendNetwork.edges"]], "edges_attribute() (compas_bender.datastructures.bendnetwork method)": [[34, "compas_bender.datastructures.BendNetwork.edges_attribute"]], "edges_attributes() (compas_bender.datastructures.bendnetwork method)": [[35, "compas_bender.datastructures.BendNetwork.edges_attributes"]], "edges_where() (compas_bender.datastructures.bendnetwork method)": [[36, "compas_bender.datastructures.BendNetwork.edges_where"]], "edges_where_predicate() (compas_bender.datastructures.bendnetwork method)": [[37, "compas_bender.datastructures.BendNetwork.edges_where_predicate"]], "embed_in_plane() (compas_bender.datastructures.bendnetwork method)": [[38, "compas_bender.datastructures.BendNetwork.embed_in_plane"]], "find_crossings() (compas_bender.datastructures.bendnetwork method)": [[39, "compas_bender.datastructures.BendNetwork.find_crossings"]], "find_cycles() (compas_bender.datastructures.bendnetwork method)": [[40, "compas_bender.datastructures.BendNetwork.find_cycles"]], "from_data() (compas_bender.datastructures.bendnetwork class method)": [[41, "compas_bender.datastructures.BendNetwork.from_data"]], "from_edges() (compas_bender.datastructures.bendnetwork class method)": [[42, "compas_bender.datastructures.BendNetwork.from_edges"]], "from_json() (compas_bender.datastructures.bendnetwork class method)": [[43, "compas_bender.datastructures.BendNetwork.from_json"]], "from_jsonstring() (compas_bender.datastructures.bendnetwork class method)": [[44, "compas_bender.datastructures.BendNetwork.from_jsonstring"]], "from_lines() (compas_bender.datastructures.bendnetwork class method)": [[45, "compas_bender.datastructures.BendNetwork.from_lines"]], "from_networkx() (compas_bender.datastructures.bendnetwork class method)": [[46, "compas_bender.datastructures.BendNetwork.from_networkx"]], "from_nodes_and_edges() (compas_bender.datastructures.bendnetwork class method)": [[47, "compas_bender.datastructures.BendNetwork.from_nodes_and_edges"]], "from_obj() (compas_bender.datastructures.bendnetwork class method)": [[48, "compas_bender.datastructures.BendNetwork.from_obj"]], "from_pointcloud() (compas_bender.datastructures.bendnetwork class method)": [[49, "compas_bender.datastructures.BendNetwork.from_pointcloud"]], "get_any_edge() (compas_bender.datastructures.bendnetwork method)": [[50, "compas_bender.datastructures.BendNetwork.get_any_edge"]], "get_any_edges() (compas_bender.datastructures.bendnetwork method)": [[51, "compas_bender.datastructures.BendNetwork.get_any_edges"]], "get_any_node() (compas_bender.datastructures.bendnetwork method)": [[52, "compas_bender.datastructures.BendNetwork.get_any_node"]], "get_any_nodes() (compas_bender.datastructures.bendnetwork method)": [[53, "compas_bender.datastructures.BendNetwork.get_any_nodes"]], "gkey_key() (compas_bender.datastructures.bendnetwork method)": [[54, "compas_bender.datastructures.BendNetwork.gkey_key"]], "gkey_node() (compas_bender.datastructures.bendnetwork method)": [[55, "compas_bender.datastructures.BendNetwork.gkey_node"]], "has_edge() (compas_bender.datastructures.bendnetwork method)": [[56, "compas_bender.datastructures.BendNetwork.has_edge"]], "has_node() (compas_bender.datastructures.bendnetwork method)": [[57, "compas_bender.datastructures.BendNetwork.has_node"]], "index_key() (compas_bender.datastructures.bendnetwork method)": [[58, "compas_bender.datastructures.BendNetwork.index_key"]], "index_uv() (compas_bender.datastructures.bendnetwork method)": [[59, "compas_bender.datastructures.BendNetwork.index_uv"]], "is_connected() (compas_bender.datastructures.bendnetwork method)": [[60, "compas_bender.datastructures.BendNetwork.is_connected"]], "is_crossed() (compas_bender.datastructures.bendnetwork method)": [[61, "compas_bender.datastructures.BendNetwork.is_crossed"]], "is_leaf() (compas_bender.datastructures.bendnetwork method)": [[62, "compas_bender.datastructures.BendNetwork.is_leaf"]], "is_node_connected() (compas_bender.datastructures.bendnetwork method)": [[63, "compas_bender.datastructures.BendNetwork.is_node_connected"]], "is_planar() (compas_bender.datastructures.bendnetwork method)": [[64, "compas_bender.datastructures.BendNetwork.is_planar"]], "is_planar_embedding() (compas_bender.datastructures.bendnetwork method)": [[65, "compas_bender.datastructures.BendNetwork.is_planar_embedding"]], "is_xy() (compas_bender.datastructures.bendnetwork method)": [[66, "compas_bender.datastructures.BendNetwork.is_xy"]], "key_gkey() (compas_bender.datastructures.bendnetwork method)": [[67, "compas_bender.datastructures.BendNetwork.key_gkey"]], "key_index() (compas_bender.datastructures.bendnetwork method)": [[68, "compas_bender.datastructures.BendNetwork.key_index"]], "laplacian_matrix() (compas_bender.datastructures.bendnetwork method)": [[69, "compas_bender.datastructures.BendNetwork.laplacian_matrix"]], "leaves() (compas_bender.datastructures.bendnetwork method)": [[70, "compas_bender.datastructures.BendNetwork.leaves"]], "neighborhood() (compas_bender.datastructures.bendnetwork method)": [[71, "compas_bender.datastructures.BendNetwork.neighborhood"]], "neighbors() (compas_bender.datastructures.bendnetwork method)": [[72, "compas_bender.datastructures.BendNetwork.neighbors"]], "neighbors_in() (compas_bender.datastructures.bendnetwork method)": [[73, "compas_bender.datastructures.BendNetwork.neighbors_in"]], "neighbors_out() (compas_bender.datastructures.bendnetwork method)": [[74, "compas_bender.datastructures.BendNetwork.neighbors_out"]], "network_adjacency_matrix() (compas_bender.datastructures.bendnetwork method)": [[75, "compas_bender.datastructures.BendNetwork.network_adjacency_matrix"]], "network_connectivity_matrix() (compas_bender.datastructures.bendnetwork method)": [[76, "compas_bender.datastructures.BendNetwork.network_connectivity_matrix"]], "network_degree_matrix() (compas_bender.datastructures.bendnetwork method)": [[77, "compas_bender.datastructures.BendNetwork.network_degree_matrix"]], "network_embed_in_plane() (compas_bender.datastructures.bendnetwork method)": [[78, "compas_bender.datastructures.BendNetwork.network_embed_in_plane"]], "network_is_planar() (compas_bender.datastructures.bendnetwork method)": [[79, "compas_bender.datastructures.BendNetwork.network_is_planar"]], "network_is_planar_embedding() (compas_bender.datastructures.bendnetwork method)": [[80, "compas_bender.datastructures.BendNetwork.network_is_planar_embedding"]], "network_laplacian_matrix() (compas_bender.datastructures.bendnetwork method)": [[81, "compas_bender.datastructures.BendNetwork.network_laplacian_matrix"]], "node_attribute() (compas_bender.datastructures.bendnetwork method)": [[82, "compas_bender.datastructures.BendNetwork.node_attribute"]], "node_attributes() (compas_bender.datastructures.bendnetwork method)": [[83, "compas_bender.datastructures.BendNetwork.node_attributes"]], "node_coordinates() (compas_bender.datastructures.bendnetwork method)": [[84, "compas_bender.datastructures.BendNetwork.node_coordinates"]], "node_gkey() (compas_bender.datastructures.bendnetwork method)": [[85, "compas_bender.datastructures.BendNetwork.node_gkey"]], "node_laplacian() (compas_bender.datastructures.bendnetwork method)": [[86, "compas_bender.datastructures.BendNetwork.node_laplacian"]], "node_neighborhood_centroid() (compas_bender.datastructures.bendnetwork method)": [[87, "compas_bender.datastructures.BendNetwork.node_neighborhood_centroid"]], "node_point() (compas_bender.datastructures.bendnetwork method)": [[88, "compas_bender.datastructures.BendNetwork.node_point"]], "node_reaction() (compas_bender.datastructures.bendnetwork method)": [[89, "compas_bender.datastructures.BendNetwork.node_reaction"]], "node_residual() (compas_bender.datastructures.bendnetwork method)": [[90, "compas_bender.datastructures.BendNetwork.node_residual"]], "node_sample() (compas_bender.datastructures.bendnetwork method)": [[91, "compas_bender.datastructures.BendNetwork.node_sample"]], "nodes() (compas_bender.datastructures.bendnetwork method)": [[92, "compas_bender.datastructures.BendNetwork.nodes"]], "nodes_attribute() (compas_bender.datastructures.bendnetwork method)": [[93, "compas_bender.datastructures.BendNetwork.nodes_attribute"]], "nodes_attributes() (compas_bender.datastructures.bendnetwork method)": [[94, "compas_bender.datastructures.BendNetwork.nodes_attributes"]], "nodes_where() (compas_bender.datastructures.bendnetwork method)": [[95, "compas_bender.datastructures.BendNetwork.nodes_where"]], "nodes_where_predicate() (compas_bender.datastructures.bendnetwork method)": [[96, "compas_bender.datastructures.BendNetwork.nodes_where_predicate"]], "number_of_edges() (compas_bender.datastructures.bendnetwork method)": [[97, "compas_bender.datastructures.BendNetwork.number_of_edges"]], "number_of_nodes() (compas_bender.datastructures.bendnetwork method)": [[98, "compas_bender.datastructures.BendNetwork.number_of_nodes"]], "sha256() (compas_bender.datastructures.bendnetwork method)": [[99, "compas_bender.datastructures.BendNetwork.sha256"]], "shortest_path() (compas_bender.datastructures.bendnetwork method)": [[100, "compas_bender.datastructures.BendNetwork.shortest_path"]], "smooth() (compas_bender.datastructures.bendnetwork method)": [[101, "compas_bender.datastructures.BendNetwork.smooth"]], "split_edge() (compas_bender.datastructures.bendnetwork method)": [[102, "compas_bender.datastructures.BendNetwork.split_edge"]], "summary() (compas_bender.datastructures.bendnetwork method)": [[103, "compas_bender.datastructures.BendNetwork.summary"]], "to_data() (compas_bender.datastructures.bendnetwork method)": [[104, "compas_bender.datastructures.BendNetwork.to_data"]], "to_json() (compas_bender.datastructures.bendnetwork method)": [[105, "compas_bender.datastructures.BendNetwork.to_json"]], "to_jsonstring() (compas_bender.datastructures.bendnetwork method)": [[106, "compas_bender.datastructures.BendNetwork.to_jsonstring"]], "to_lines() (compas_bender.datastructures.bendnetwork method)": [[107, "compas_bender.datastructures.BendNetwork.to_lines"]], "to_networkx() (compas_bender.datastructures.bendnetwork method)": [[108, "compas_bender.datastructures.BendNetwork.to_networkx"]], "to_nodes_and_edges() (compas_bender.datastructures.bendnetwork method)": [[109, "compas_bender.datastructures.BendNetwork.to_nodes_and_edges"]], "to_obj() (compas_bender.datastructures.bendnetwork method)": [[110, "compas_bender.datastructures.BendNetwork.to_obj"]], "to_points() (compas_bender.datastructures.bendnetwork method)": [[111, "compas_bender.datastructures.BendNetwork.to_points"]], "transform() (compas_bender.datastructures.bendnetwork method)": [[112, "compas_bender.datastructures.BendNetwork.transform"]], "transformed() (compas_bender.datastructures.bendnetwork method)": [[113, "compas_bender.datastructures.BendNetwork.transformed"]], "unset_edge_attribute() (compas_bender.datastructures.bendnetwork method)": [[114, "compas_bender.datastructures.BendNetwork.unset_edge_attribute"]], "unset_node_attribute() (compas_bender.datastructures.bendnetwork method)": [[115, "compas_bender.datastructures.BendNetwork.unset_node_attribute"]], "update_dea() (compas_bender.datastructures.bendnetwork method)": [[116, "compas_bender.datastructures.BendNetwork.update_dea"]], "update_default_edge_attributes() (compas_bender.datastructures.bendnetwork method)": [[117, "compas_bender.datastructures.BendNetwork.update_default_edge_attributes"]], "update_default_node_attributes() (compas_bender.datastructures.bendnetwork method)": [[118, "compas_bender.datastructures.BendNetwork.update_default_node_attributes"]], "update_dna() (compas_bender.datastructures.bendnetwork method)": [[119, "compas_bender.datastructures.BendNetwork.update_dna"]], "uv_index() (compas_bender.datastructures.bendnetwork method)": [[120, "compas_bender.datastructures.BendNetwork.uv_index"]], "validate_data() (compas_bender.datastructures.bendnetwork method)": [[121, "compas_bender.datastructures.BendNetwork.validate_data"]], "validate_json() (compas_bender.datastructures.bendnetwork method)": [[122, "compas_bender.datastructures.BendNetwork.validate_json"]], "bendnetworkartist (class in compas_bender.rhino)": [[123, "compas_bender.rhino.BendNetworkArtist"]], "build() (compas_bender.rhino.bendnetworkartist static method)": [[124, "compas_bender.rhino.BendNetworkArtist.build"]], "build_as() (compas_bender.rhino.bendnetworkartist static method)": [[125, "compas_bender.rhino.BendNetworkArtist.build_as"]], "clear() (compas_bender.rhino.bendnetworkartist method)": [[126, "compas_bender.rhino.BendNetworkArtist.clear"]], "clear_edgelabels() (compas_bender.rhino.bendnetworkartist method)": [[127, "compas_bender.rhino.BendNetworkArtist.clear_edgelabels"]], "clear_edges() (compas_bender.rhino.bendnetworkartist method)": [[128, "compas_bender.rhino.BendNetworkArtist.clear_edges"]], "clear_layer() (compas_bender.rhino.bendnetworkartist method)": [[129, "compas_bender.rhino.BendNetworkArtist.clear_layer"]], "clear_nodelabels() (compas_bender.rhino.bendnetworkartist method)": [[130, "compas_bender.rhino.BendNetworkArtist.clear_nodelabels"]], "clear_nodes() (compas_bender.rhino.bendnetworkartist method)": [[131, "compas_bender.rhino.BendNetworkArtist.clear_nodes"]], "draw() (compas_bender.rhino.bendnetworkartist method)": [[132, "compas_bender.rhino.BendNetworkArtist.draw"]], "draw_axial() (compas_bender.rhino.bendnetworkartist method)": [[133, "compas_bender.rhino.BendNetworkArtist.draw_axial"]], "draw_collection() (compas_bender.rhino.bendnetworkartist static method)": [[134, "compas_bender.rhino.BendNetworkArtist.draw_collection"]], "draw_edgelabels() (compas_bender.rhino.bendnetworkartist method)": [[135, "compas_bender.rhino.BendNetworkArtist.draw_edgelabels"]], "draw_edges() (compas_bender.rhino.bendnetworkartist method)": [[136, "compas_bender.rhino.BendNetworkArtist.draw_edges"]], "draw_nodelabels() (compas_bender.rhino.bendnetworkartist method)": [[137, "compas_bender.rhino.BendNetworkArtist.draw_nodelabels"]], "draw_nodes() (compas_bender.rhino.bendnetworkartist method)": [[138, "compas_bender.rhino.BendNetworkArtist.draw_nodes"]], "draw_reactions() (compas_bender.rhino.bendnetworkartist method)": [[139, "compas_bender.rhino.BendNetworkArtist.draw_reactions"]], "redraw() (compas_bender.rhino.bendnetworkartist static method)": [[140, "compas_bender.rhino.BendNetworkArtist.redraw"]], "register() (compas_bender.rhino.bendnetworkartist static method)": [[141, "compas_bender.rhino.BendNetworkArtist.register"]]}})