Search.setIndex({"docnames": ["api", "api/compas_bender", "api/compas_bender.bend", "api/compas_bender.datastructures", "api/generated/compas_bender.bend.bend_splines", "api/generated/compas_bender.datastructures.BendNetwork", "api/generated/compas_bender.datastructures.BendNetwork.ToString", "api/generated/compas_bender.datastructures.BendNetwork.aabb", "api/generated/compas_bender.datastructures.BendNetwork.add_edge", "api/generated/compas_bender.datastructures.BendNetwork.add_node", "api/generated/compas_bender.datastructures.BendNetwork.adjacency_matrix", "api/generated/compas_bender.datastructures.BendNetwork.clear", "api/generated/compas_bender.datastructures.BendNetwork.complement", "api/generated/compas_bender.datastructures.BendNetwork.compute_aabb", "api/generated/compas_bender.datastructures.BendNetwork.compute_obb", "api/generated/compas_bender.datastructures.BendNetwork.connected_edges", "api/generated/compas_bender.datastructures.BendNetwork.connected_nodes", "api/generated/compas_bender.datastructures.BendNetwork.connectivity_matrix", "api/generated/compas_bender.datastructures.BendNetwork.copy", "api/generated/compas_bender.datastructures.BendNetwork.count_crossings", "api/generated/compas_bender.datastructures.BendNetwork.degree", "api/generated/compas_bender.datastructures.BendNetwork.degree_in", "api/generated/compas_bender.datastructures.BendNetwork.degree_matrix", "api/generated/compas_bender.datastructures.BendNetwork.degree_out", "api/generated/compas_bender.datastructures.BendNetwork.delete_edge", "api/generated/compas_bender.datastructures.BendNetwork.delete_node", "api/generated/compas_bender.datastructures.BendNetwork.edge_attribute", "api/generated/compas_bender.datastructures.BendNetwork.edge_attributes", "api/generated/compas_bender.datastructures.BendNetwork.edge_coordinates", "api/generated/compas_bender.datastructures.BendNetwork.edge_direction", "api/generated/compas_bender.datastructures.BendNetwork.edge_end", "api/generated/compas_bender.datastructures.BendNetwork.edge_index", "api/generated/compas_bender.datastructures.BendNetwork.edge_length", "api/generated/compas_bender.datastructures.BendNetwork.edge_line", "api/generated/compas_bender.datastructures.BendNetwork.edge_midpoint", "api/generated/compas_bender.datastructures.BendNetwork.edge_point", "api/generated/compas_bender.datastructures.BendNetwork.edge_sample", "api/generated/compas_bender.datastructures.BendNetwork.edge_start", "api/generated/compas_bender.datastructures.BendNetwork.edge_vector", "api/generated/compas_bender.datastructures.BendNetwork.edges", "api/generated/compas_bender.datastructures.BendNetwork.edges_attribute", "api/generated/compas_bender.datastructures.BendNetwork.edges_attributes", "api/generated/compas_bender.datastructures.BendNetwork.edges_where", "api/generated/compas_bender.datastructures.BendNetwork.edges_where_predicate", "api/generated/compas_bender.datastructures.BendNetwork.embed_in_plane", "api/generated/compas_bender.datastructures.BendNetwork.exploded", "api/generated/compas_bender.datastructures.BendNetwork.find_crossings", "api/generated/compas_bender.datastructures.BendNetwork.find_cycles", "api/generated/compas_bender.datastructures.BendNetwork.from_edges", "api/generated/compas_bender.datastructures.BendNetwork.from_json", "api/generated/compas_bender.datastructures.BendNetwork.from_jsonstring", "api/generated/compas_bender.datastructures.BendNetwork.from_lines", "api/generated/compas_bender.datastructures.BendNetwork.from_networkx", "api/generated/compas_bender.datastructures.BendNetwork.from_nodes_and_edges", "api/generated/compas_bender.datastructures.BendNetwork.from_obj", "api/generated/compas_bender.datastructures.BendNetwork.from_pointcloud", "api/generated/compas_bender.datastructures.BendNetwork.gkey_node", "api/generated/compas_bender.datastructures.BendNetwork.has_edge", "api/generated/compas_bender.datastructures.BendNetwork.has_node", "api/generated/compas_bender.datastructures.BendNetwork.index_edge", "api/generated/compas_bender.datastructures.BendNetwork.index_node", "api/generated/compas_bender.datastructures.BendNetwork.is_connected", "api/generated/compas_bender.datastructures.BendNetwork.is_crossed", "api/generated/compas_bender.datastructures.BendNetwork.is_leaf", "api/generated/compas_bender.datastructures.BendNetwork.is_node_connected", "api/generated/compas_bender.datastructures.BendNetwork.is_planar", "api/generated/compas_bender.datastructures.BendNetwork.is_planar_embedding", "api/generated/compas_bender.datastructures.BendNetwork.is_xy", "api/generated/compas_bender.datastructures.BendNetwork.join_edges", "api/generated/compas_bender.datastructures.BendNetwork.laplacian_matrix", "api/generated/compas_bender.datastructures.BendNetwork.leaves", "api/generated/compas_bender.datastructures.BendNetwork.neighborhood", "api/generated/compas_bender.datastructures.BendNetwork.neighbors", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_in", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_out", "api/generated/compas_bender.datastructures.BendNetwork.node_attribute", "api/generated/compas_bender.datastructures.BendNetwork.node_attributes", "api/generated/compas_bender.datastructures.BendNetwork.node_coordinates", "api/generated/compas_bender.datastructures.BendNetwork.node_edges", "api/generated/compas_bender.datastructures.BendNetwork.node_gkey", "api/generated/compas_bender.datastructures.BendNetwork.node_index", "api/generated/compas_bender.datastructures.BendNetwork.node_laplacian", "api/generated/compas_bender.datastructures.BendNetwork.node_neighborhood_centroid", "api/generated/compas_bender.datastructures.BendNetwork.node_point", "api/generated/compas_bender.datastructures.BendNetwork.node_reaction", "api/generated/compas_bender.datastructures.BendNetwork.node_residual", "api/generated/compas_bender.datastructures.BendNetwork.node_sample", "api/generated/compas_bender.datastructures.BendNetwork.nodes", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attribute", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attributes", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where_predicate", "api/generated/compas_bender.datastructures.BendNetwork.number_of_edges", "api/generated/compas_bender.datastructures.BendNetwork.number_of_nodes", "api/generated/compas_bender.datastructures.BendNetwork.obb", "api/generated/compas_bender.datastructures.BendNetwork.rotate", "api/generated/compas_bender.datastructures.BendNetwork.rotated", "api/generated/compas_bender.datastructures.BendNetwork.scale", "api/generated/compas_bender.datastructures.BendNetwork.scaled", "api/generated/compas_bender.datastructures.BendNetwork.sha256", "api/generated/compas_bender.datastructures.BendNetwork.shortest_path", "api/generated/compas_bender.datastructures.BendNetwork.smooth", "api/generated/compas_bender.datastructures.BendNetwork.split_edge", "api/generated/compas_bender.datastructures.BendNetwork.summary", "api/generated/compas_bender.datastructures.BendNetwork.to_json", "api/generated/compas_bender.datastructures.BendNetwork.to_jsonstring", "api/generated/compas_bender.datastructures.BendNetwork.to_lines", "api/generated/compas_bender.datastructures.BendNetwork.to_networkx", "api/generated/compas_bender.datastructures.BendNetwork.to_nodes_and_edges", "api/generated/compas_bender.datastructures.BendNetwork.to_obj", "api/generated/compas_bender.datastructures.BendNetwork.to_points", "api/generated/compas_bender.datastructures.BendNetwork.transform", "api/generated/compas_bender.datastructures.BendNetwork.transform_numpy", "api/generated/compas_bender.datastructures.BendNetwork.transformed", "api/generated/compas_bender.datastructures.BendNetwork.transformed_numpy", "api/generated/compas_bender.datastructures.BendNetwork.translate", "api/generated/compas_bender.datastructures.BendNetwork.translated", "api/generated/compas_bender.datastructures.BendNetwork.unset_edge_attribute", "api/generated/compas_bender.datastructures.BendNetwork.unset_node_attribute", "api/generated/compas_bender.datastructures.BendNetwork.update_default_edge_attributes", "api/generated/compas_bender.datastructures.BendNetwork.update_default_node_attributes", "api/generated/compas_bender.datastructures.BendNetwork.validate_data", "examples", "examples/example_arch", "examples/example_cantilever", "examples/example_roof", "index", "installation", "license", "tutorial"], "filenames": ["api.rst", "api/compas_bender.rst", "api/compas_bender.bend.rst", "api/compas_bender.datastructures.rst", "api/generated/compas_bender.bend.bend_splines.rst", "api/generated/compas_bender.datastructures.BendNetwork.rst", "api/generated/compas_bender.datastructures.BendNetwork.ToString.rst", "api/generated/compas_bender.datastructures.BendNetwork.aabb.rst", "api/generated/compas_bender.datastructures.BendNetwork.add_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.add_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.adjacency_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.clear.rst", "api/generated/compas_bender.datastructures.BendNetwork.complement.rst", "api/generated/compas_bender.datastructures.BendNetwork.compute_aabb.rst", "api/generated/compas_bender.datastructures.BendNetwork.compute_obb.rst", "api/generated/compas_bender.datastructures.BendNetwork.connected_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.connected_nodes.rst", "api/generated/compas_bender.datastructures.BendNetwork.connectivity_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.copy.rst", "api/generated/compas_bender.datastructures.BendNetwork.count_crossings.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree_in.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.degree_out.rst", "api/generated/compas_bender.datastructures.BendNetwork.delete_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.delete_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_coordinates.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_direction.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_end.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_index.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_length.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_line.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_midpoint.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_point.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_sample.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_start.rst", "api/generated/compas_bender.datastructures.BendNetwork.edge_vector.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_where.rst", "api/generated/compas_bender.datastructures.BendNetwork.edges_where_predicate.rst", "api/generated/compas_bender.datastructures.BendNetwork.embed_in_plane.rst", "api/generated/compas_bender.datastructures.BendNetwork.exploded.rst", "api/generated/compas_bender.datastructures.BendNetwork.find_crossings.rst", "api/generated/compas_bender.datastructures.BendNetwork.find_cycles.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_json.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_jsonstring.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_lines.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_networkx.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_nodes_and_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_obj.rst", "api/generated/compas_bender.datastructures.BendNetwork.from_pointcloud.rst", "api/generated/compas_bender.datastructures.BendNetwork.gkey_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.has_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.has_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.index_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.index_node.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_connected.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_crossed.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_leaf.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_node_connected.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_planar.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_planar_embedding.rst", "api/generated/compas_bender.datastructures.BendNetwork.is_xy.rst", "api/generated/compas_bender.datastructures.BendNetwork.join_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.laplacian_matrix.rst", "api/generated/compas_bender.datastructures.BendNetwork.leaves.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighborhood.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighbors.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_in.rst", "api/generated/compas_bender.datastructures.BendNetwork.neighbors_out.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_coordinates.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_gkey.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_index.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_laplacian.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_neighborhood_centroid.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_point.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_reaction.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_residual.rst", "api/generated/compas_bender.datastructures.BendNetwork.node_sample.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where.rst", "api/generated/compas_bender.datastructures.BendNetwork.nodes_where_predicate.rst", "api/generated/compas_bender.datastructures.BendNetwork.number_of_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.number_of_nodes.rst", "api/generated/compas_bender.datastructures.BendNetwork.obb.rst", "api/generated/compas_bender.datastructures.BendNetwork.rotate.rst", "api/generated/compas_bender.datastructures.BendNetwork.rotated.rst", "api/generated/compas_bender.datastructures.BendNetwork.scale.rst", "api/generated/compas_bender.datastructures.BendNetwork.scaled.rst", "api/generated/compas_bender.datastructures.BendNetwork.sha256.rst", "api/generated/compas_bender.datastructures.BendNetwork.shortest_path.rst", "api/generated/compas_bender.datastructures.BendNetwork.smooth.rst", "api/generated/compas_bender.datastructures.BendNetwork.split_edge.rst", "api/generated/compas_bender.datastructures.BendNetwork.summary.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_json.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_jsonstring.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_lines.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_networkx.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_nodes_and_edges.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_obj.rst", "api/generated/compas_bender.datastructures.BendNetwork.to_points.rst", "api/generated/compas_bender.datastructures.BendNetwork.transform.rst", "api/generated/compas_bender.datastructures.BendNetwork.transform_numpy.rst", "api/generated/compas_bender.datastructures.BendNetwork.transformed.rst", "api/generated/compas_bender.datastructures.BendNetwork.transformed_numpy.rst", "api/generated/compas_bender.datastructures.BendNetwork.translate.rst", "api/generated/compas_bender.datastructures.BendNetwork.translated.rst", "api/generated/compas_bender.datastructures.BendNetwork.unset_edge_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.unset_node_attribute.rst", "api/generated/compas_bender.datastructures.BendNetwork.update_default_edge_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.update_default_node_attributes.rst", "api/generated/compas_bender.datastructures.BendNetwork.validate_data.rst", "examples.rst", "examples/example_arch.rst", "examples/example_cantilever.rst", "examples/example_roof.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["API Reference", "compas_bender", "bend", "datastructures", "bend_splines", "BendNetwork", "BendNetwork.ToString", "BendNetwork.aabb", "BendNetwork.add_edge", "BendNetwork.add_node", "BendNetwork.adjacency_matrix", "BendNetwork.clear", "BendNetwork.complement", "BendNetwork.compute_aabb", "BendNetwork.compute_obb", "BendNetwork.connected_edges", "BendNetwork.connected_nodes", "BendNetwork.connectivity_matrix", "BendNetwork.copy", "BendNetwork.count_crossings", "BendNetwork.degree", "BendNetwork.degree_in", "BendNetwork.degree_matrix", "BendNetwork.degree_out", "BendNetwork.delete_edge", "BendNetwork.delete_node", "BendNetwork.edge_attribute", "BendNetwork.edge_attributes", "BendNetwork.edge_coordinates", "BendNetwork.edge_direction", "BendNetwork.edge_end", "BendNetwork.edge_index", "BendNetwork.edge_length", "BendNetwork.edge_line", "BendNetwork.edge_midpoint", "BendNetwork.edge_point", "BendNetwork.edge_sample", "BendNetwork.edge_start", "BendNetwork.edge_vector", "BendNetwork.edges", "BendNetwork.edges_attribute", "BendNetwork.edges_attributes", "BendNetwork.edges_where", "BendNetwork.edges_where_predicate", "BendNetwork.embed_in_plane", "BendNetwork.exploded", "BendNetwork.find_crossings", "BendNetwork.find_cycles", "BendNetwork.from_edges", "BendNetwork.from_json", "BendNetwork.from_jsonstring", "BendNetwork.from_lines", "BendNetwork.from_networkx", "BendNetwork.from_nodes_and_edges", "BendNetwork.from_obj", "BendNetwork.from_pointcloud", "BendNetwork.gkey_node", "BendNetwork.has_edge", "BendNetwork.has_node", "BendNetwork.index_edge", "BendNetwork.index_node", "BendNetwork.is_connected", "BendNetwork.is_crossed", "BendNetwork.is_leaf", "BendNetwork.is_node_connected", "BendNetwork.is_planar", "BendNetwork.is_planar_embedding", "BendNetwork.is_xy", "BendNetwork.join_edges", "BendNetwork.laplacian_matrix", "BendNetwork.leaves", "BendNetwork.neighborhood", "BendNetwork.neighbors", "BendNetwork.neighbors_in", "BendNetwork.neighbors_out", "BendNetwork.node_attribute", "BendNetwork.node_attributes", "BendNetwork.node_coordinates", "BendNetwork.node_edges", "BendNetwork.node_gkey", "BendNetwork.node_index", "BendNetwork.node_laplacian", "BendNetwork.node_neighborhood_centroid", "BendNetwork.node_point", "BendNetwork.node_reaction", "BendNetwork.node_residual", "BendNetwork.node_sample", "BendNetwork.nodes", "BendNetwork.nodes_attribute", "BendNetwork.nodes_attributes", "BendNetwork.nodes_where", "BendNetwork.nodes_where_predicate", "BendNetwork.number_of_edges", "BendNetwork.number_of_nodes", "BendNetwork.obb", "BendNetwork.rotate", "BendNetwork.rotated", "BendNetwork.scale", "BendNetwork.scaled", "BendNetwork.sha256", "BendNetwork.shortest_path", "BendNetwork.smooth", "BendNetwork.split_edge", "BendNetwork.summary", "BendNetwork.to_json", "BendNetwork.to_jsonstring", "BendNetwork.to_lines", "BendNetwork.to_networkx", "BendNetwork.to_nodes_and_edges", "BendNetwork.to_obj", "BendNetwork.to_points", "BendNetwork.transform", "BendNetwork.transform_numpy", "BendNetwork.transformed", "BendNetwork.transformed_numpy", "BendNetwork.translate", "BendNetwork.translated", "BendNetwork.unset_edge_attribute", "BendNetwork.unset_node_attribute", "BendNetwork.update_default_edge_attributes", "BendNetwork.update_default_node_attributes", "BendNetwork.validate_data", "Examples", "Simple arch supported membrane", "Membrane supported by a tied down cantilevering spline", "Membrane roof with supporting arch and two ties", "COMPAS Bender", "Installation", "License", "Tutorial"], "terms": {"compas_bend": [0, 4, 5, 123, 124, 125, 126, 127], "bend": [1, 4, 5, 123, 124, 125, 126], "datastructur": [1, 5, 10, 12, 13, 14, 17, 19, 22, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 61, 62, 65, 66, 67, 69, 95, 97, 99, 113, 114, 115, 116, 123, 124, 125, 126], "network": [4, 5, 123, 124, 125], "cabl": [4, 123, 124, 125], "none": [4, 8, 9, 11, 18, 24, 25, 26, 27, 40, 41, 42, 44, 47, 51, 54, 56, 68, 75, 76, 79, 88, 89, 90, 95, 96, 97, 98, 100, 101, 109, 111, 112, 115, 117, 119, 120, 123, 124, 125], "spline": [4, 5, 122, 123, 125, 126], "config": [4, 123, 124, 125], "comput": [4, 13, 14, 82, 92, 93, 99], "equilibrium": [4, 5], "configur": 4, "node": [4, 5, 8, 9, 10, 16, 20, 21, 23, 24, 25, 26, 39, 42, 43, 48, 53, 55, 56, 57, 58, 60, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 100, 101, 102, 108, 111, 118, 120, 123, 124, 125], "edg": [4, 5, 8, 12, 15, 19, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 53, 57, 59, 62, 65, 66, 68, 78, 87, 90, 91, 92, 102, 108, 117, 119, 123, 124, 125], "combin": 4, "paramet": [4, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125], "bendnetwork": [4, 123, 124, 125], "list": [4, 10, 15, 16, 17, 22, 27, 28, 31, 36, 40, 41, 45, 46, 47, 48, 51, 53, 59, 60, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 86, 88, 89, 100, 101, 106, 108, 110, 123, 124, 125], "dict": [4, 8, 9, 27, 31, 39, 41, 42, 43, 53, 56, 59, 60, 76, 79, 80, 87, 89, 90, 91, 117, 118, 119, 120], "option": [4, 8, 9, 10, 17, 18, 22, 26, 27, 28, 35, 36, 39, 40, 41, 42, 43, 44, 47, 51, 54, 55, 56, 57, 69, 71, 75, 76, 77, 79, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 101, 102, 104, 105, 119, 120], "return": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121], "iter": [4, 39, 87, 101], "class": [5, 6], "base": [5, 95, 96], "graph": [5, 7, 9, 10, 11, 12, 17, 19, 22, 24, 25, 39, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 87, 92, 93, 94, 101, 102, 103, 106, 107, 108, 109, 110, 111], "extens": 5, "compa": [5, 7, 12, 13, 14, 18, 19, 29, 30, 33, 34, 35, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 65, 66, 67, 68, 79, 81, 82, 83, 84, 85, 94, 95, 96, 99, 100, 115, 116, 123, 124, 125], "data": [5, 11, 18, 39, 42, 43, 49, 50, 54, 68, 87, 90, 91, 99, 104, 105, 112, 113, 114, 121, 123, 124, 125, 126], "structur": [5, 47, 68, 112, 113, 114, 126], "manag": 5, "relationship": 5, "between": [5, 47, 55, 100], "element": 5, "activ": [5, 126], "individu": 5, "attribut": [5, 8, 9, 26, 27, 39, 40, 41, 42, 43, 68, 75, 76, 87, 88, 89, 90, 91, 117, 118, 119, 120], "A": [5, 8, 9, 19, 27, 31, 40, 41, 42, 44, 46, 51, 53, 54, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 79, 80, 88, 89, 90, 100, 101, 106, 107, 108, 109, 110, 119, 120, 128], "add": [5, 8, 9, 123, 124, 125], "follow": [5, 47, 123, 124, 125, 128], "default": [5, 6, 9, 18, 51, 56, 68, 79, 95, 96, 97, 98, 104, 105, 117, 118, 119, 120], "ar": [5, 6, 47, 68], "other": [5, 6, 128], "thei": 5, "read": 5, "onli": [5, 63, 68], "popul": 5, "solver": 5, "is_anchor": [5, 123, 124, 125], "fals": [5, 12, 39, 42, 43, 44, 57, 58, 61, 62, 63, 64, 65, 67, 69, 87, 90, 91, 99, 104, 105, 123, 124, 125], "px": 5, "0": [5, 9, 35, 99, 101, 102, 123, 124, 125], "py": 5, "pz": 5, "qpre": [5, 124, 125], "1": [5, 9, 12, 35, 36, 69, 71, 81, 86, 99, 102, 123, 124, 125], "fpre": 5, "lpre": [5, 124, 125], "linit": [5, 123, 124, 125], "e": [5, 31, 123, 124, 125, 127], "radiu": [5, 123, 124, 125], "thick": [5, 123, 124, 125], "These": 5, "defin": [5, 101, 106], "properti": 5, "strut": 5, "ti": [5, 122, 126], "cablenet": 5, "system": 5, "And": 5, "re": 5, "us": [5, 6, 9, 26, 27, 40, 41, 43, 47, 54, 69, 75, 76, 88, 89, 91, 99, 100, 111, 112, 113, 114, 115, 116, 121, 123, 124, 125, 126, 128], "bend_splin": [5, 123, 124, 125], "solv": [5, 47], "under": 5, "given": [5, 68], "boundari": 5, "condit": [5, 42, 43, 90, 91, 128], "method": [5, 6, 126], "inherit": 5, "convert": [6, 51, 56, 79, 104, 105], "instanc": [6, 48, 49, 50, 52, 107], "string": [6, 50, 51, 54, 56, 79, 105, 109], "thi": [6, 18, 19, 46, 47, 49, 50, 62, 96, 98, 113, 114, 116, 121, 128], "exist": [6, 26, 27, 40, 41, 61, 65, 75, 76, 88, 89, 100, 117, 118], "net": 6, "compat": 6, "when": [6, 26, 75], "ironpython": 6, "implicit": 6, "convers": 6, "usual": 6, "take": [6, 43, 47, 91], "place": [6, 68], "cpython": 6, "kick": 6, "its": [6, 8, 9, 39, 42, 43, 45, 81, 90, 91, 101, 102, 104, 105], "print": [6, 104, 105], "self": 6, "gettyp": 6, "fullnam": 6, "similar": 6, "overrid": 6, "object": [6, 18, 19, 26, 44, 46, 47, 49, 50, 51, 53, 54, 55, 62, 65, 66, 67, 101, 104, 105, 109, 121, 123, 124, 125], "fix": [6, 44, 101], "make": [6, 18], "rhino": 6, "grasshopp": 6, "displai": 6, "proper": 6, "represent": [6, 104, 105], "connect": [6, 15, 16, 17, 45, 54, 55, 61, 64, 78, 128], "panel": 6, "type": [6, 9, 18, 47, 49, 50, 121, 123, 124, 125], "output": 6, "calcul": [7, 94], "axi": [7, 13, 95, 96], "align": [7, 13], "bound": [7, 13, 14, 94], "box": [7, 13, 14, 94], "geometri": [7, 13, 14, 29, 30, 33, 34, 35, 37, 38, 47, 55, 68, 81, 82, 83, 84, 85, 94, 95, 96, 98, 115, 116, 123, 124, 125], "u": [8, 12, 39, 42, 43, 100, 123, 124, 125], "v": [8, 12, 39, 42, 43, 100, 123, 124, 125], "attr_dict": [8, 9, 119, 120], "kwattr": [8, 9, 119, 120], "an": [8, 9, 18, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 47, 49, 50, 54, 65, 75, 84, 88, 89, 104, 105, 109, 117, 121, 123, 124, 125, 128], "specifi": [8, 9, 35, 53], "hashabl": [8, 9, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 53, 56, 57, 58, 59, 60, 63, 64, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 100, 102, 108, 117], "The": [8, 9, 12, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 47, 48, 49, 50, 54, 55, 57, 58, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 128], "identifi": [8, 9, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 56, 57, 58, 59, 63, 64, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 100, 102, 117, 118, 123, 124, 125], "first": 8, "second": 8, "str": [8, 9, 26, 27, 28, 39, 40, 41, 42, 43, 49, 50, 54, 56, 75, 76, 77, 79, 87, 88, 89, 90, 91, 99, 103, 104, 105, 117, 118, 119, 120], "ani": [8, 9, 12, 27, 39, 40, 41, 42, 43, 47, 76, 87, 88, 89, 90, 91, 119, 120, 121, 128], "dictionari": [8, 9, 27, 31, 53, 56, 59, 60, 76, 79, 80, 119, 120], "addit": [8, 9, 39, 42, 43, 87, 90, 91, 119, 120], "compil": [8, 9, 119, 120], "remain": [8, 9, 119, 120], "name": [8, 9, 26, 27, 40, 41, 42, 75, 76, 88, 89, 90, 117, 118, 119, 120], "argument": [8, 9, 42, 101, 119, 120], "tupl": [8, 15, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 51, 53, 57, 59, 78, 87, 90, 91, 102, 106, 108, 117], "add_nod": [8, 25], "delete_edg": [8, 25], "exampl": [8, 9, 12, 24, 25, 43, 47, 61, 91, 99, 126, 129], "kei": [9, 20, 21, 23, 25, 26, 27, 40, 41, 42, 46, 53, 56, 58, 60, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 87, 88, 89, 90, 102, 117, 118, 123, 124, 125], "which": [9, 28, 42, 43, 47, 90, 91], "case": 9, "int": [9, 19, 20, 21, 23, 31, 33, 36, 51, 55, 56, 59, 60, 71, 79, 80, 83, 84, 85, 86, 92, 93, 101, 118], "i": [9, 12, 26, 27, 31, 35, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 54, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 75, 76, 79, 87, 88, 89, 90, 91, 101, 102, 121, 123, 124, 125, 128], "automat": 9, "gener": [9, 12, 123, 124, 125], "vertex": [9, 31, 46, 47, 59], "add_edg": [9, 24], "delete_nod": [9, 24], "note": [9, 19, 46, 47, 61, 62, 63, 65, 68, 69, 117, 118], "If": [9, 26, 27, 35, 39, 40, 41, 42, 43, 44, 49, 50, 57, 65, 69, 75, 76, 87, 88, 89, 90, 91, 99, 101, 102, 104, 105, 117, 118], "provid": [9, 27, 42, 89, 101, 126, 128], "one": [9, 62, 63], "increment": 9, "highest": 9, "integ": 9, "rtype": [10, 17, 22, 69], "arrai": [10, 17, 22, 31, 69, 80], "creat": [10, 17, 22, 48, 52, 68, 69, 107], "adjac": 10, "matrix": [10, 17, 22, 69], "from": [10, 12, 17, 22, 24, 25, 38, 48, 49, 50, 51, 52, 53, 54, 55, 61, 69, 81, 99, 100, 107, 123, 124, 125, 127, 128], "liter": [10, 17, 22, 69], "csc": [10, 17, 22, 69], "csr": [10, 17, 22, 69], "coo": [10, 17, 22, 69], "format": [10, 17, 22, 69, 99, 103, 123, 124, 125], "result": [10, 17, 22, 69], "array_lik": [10, 17, 22, 69], "construct": [10, 17, 22, 49, 50, 51, 53, 54, 55, 69, 121], "all": [11, 27, 41, 46, 67, 70, 76, 111, 128], "g": 12, "h": 12, "same": [12, 47], "vertic": [12, 47, 61, 67, 100, 110], "whose": 12, "consist": 12, "present": [12, 57, 58], "refer": [12, 126], "wolfram": 12, "mathworld": 12, "avail": [12, 127], "http": [12, 127], "com": [12, 127], "graphcompl": 12, "html": 12, "import": [12, 61, 99, 123, 124, 125], "from_obj": [12, 51, 53, 55, 61, 99, 109], "get": [12, 15, 16, 26, 27, 36, 40, 41, 42, 43, 61, 75, 76, 86, 88, 89, 90, 91, 99], "line": [12, 33, 47, 51, 54, 61, 65, 106, 123, 124, 125], "obj": [12, 26, 40, 54, 61, 75, 88, 99, 109], "has_edg": [12, 58, 123, 124, 125], "direct": [12, 29, 35, 47, 52, 57, 97, 98], "orient": [14, 94], "group": [15, 16, 128], "connected_nod": 15, "connected_edg": 16, "cl": 18, "independ": 18, "current": [18, 69], "count": 19, "number": [19, 20, 21, 23, 51, 55, 56, 79, 92, 93, 101], "cross": [19, 46, 62, 65, 66], "pair": [19, 24, 26, 27, 31, 42, 46, 48, 51, 56, 57, 59, 60, 62, 76, 79, 80, 90, 106, 108], "algorithm": [19, 46, 47, 62, 99, 100, 126], "assum": [19, 46, 62], "li": [19, 46, 62, 67], "xy": [19, 46, 62, 67], "plane": [19, 44, 46, 62, 65, 66, 67], "neighbor": [20, 21, 23, 47, 63, 71, 73, 74, 82, 101, 123, 124, 125], "degree_out": [20, 21], "degree_in": [20, 23], "numer": 21, "incom": [21, 73], "degre": [21, 22, 23, 55], "outgo": [23, 74], "delet": [24, 25], "valu": [26, 27, 35, 40, 41, 42, 69, 75, 76, 88, 89, 90, 117, 118, 119, 120], "set": [26, 27, 36, 40, 41, 42, 43, 51, 75, 76, 86, 88, 89, 90, 91, 117, 118], "function": [26, 27, 40, 41, 42, 43, 75, 76, 88, 89, 91, 101], "setter": [26, 27, 40, 41, 75, 76, 88, 89], "rais": [26, 27, 40, 41, 44, 49, 50, 65, 75, 76, 88, 89, 101, 102, 117, 118], "keyerror": [26, 27, 40, 41, 75, 76, 88, 89, 117, 118], "doe": [26, 27, 40, 41, 75, 76, 88, 89, 117, 118], "unset_edge_attribut": 26, "edges_attribut": [26, 27, 75, 76, 88, 89, 123, 124, 125], "node_attribut": [26, 27, 40, 41, 88, 89, 118, 123, 124, 125], "nodes_attribut": [26, 27, 40, 41, 75, 76], "multipl": [27, 40, 41, 76, 88, 89], "empti": [27, 41, 76], "correspond": [27, 31, 33, 41, 56, 59, 76, 79, 80, 83, 89], "ax": [28, 77], "xyz": [28, 69, 77, 108, 123, 124, 125], "coordin": [28, 51, 53, 67, 77, 106, 108, 110], "start": [28, 37, 38, 51, 100, 106, 123, 124, 125], "end": [28, 30, 38, 51, 100, 106], "point": [28, 30, 34, 35, 37, 44, 51, 53, 54, 55, 69, 82, 83, 95, 96, 106, 109, 123, 124, 125], "along": [28, 35, 102], "should": [28, 42, 43, 47, 90, 91], "includ": [28, 128], "float": [28, 32, 35, 51, 53, 77, 95, 96, 97, 98, 101, 102, 106, 108, 110], "edge_point": [28, 30, 34, 37], "edge_start": [28, 30, 34, 35], "edge_end": [28, 34, 35, 37], "edge_midpoint": [28, 30, 35, 37], "vector": [29, 35, 38, 69, 81, 84, 85, 95, 96, 115, 116, 123, 124, 125], "edge_vector": [29, 32], "edge_lin": [29, 32, 38, 123, 124, 125], "edge_length": [29, 38], "map": [31, 54, 56, 59, 60, 79, 80], "index": [31, 59, 60, 80, 123, 124, 125, 126], "uv": [31, 59], "index_edg": [31, 60], "node_index": [31, 60], "length": [32, 102, 123, 124, 125], "edge_direct": [32, 38], "segment": 33, "locat": [34, 35, 83], "midpoint": 34, "t": [35, 102], "5": [35, 101, 102, 124, 125], "parametr": 35, "outsid": [35, 47], "rang": [35, 42, 90, 102], "lie": 35, "size": [36, 71, 86], "random": [36, 55, 86], "sampl": [36, 86], "node_sampl": 36, "over": [39, 87], "bool": [39, 42, 43, 44, 57, 58, 61, 62, 63, 64, 65, 66, 67, 69, 87, 90, 91, 99, 104, 105], "true": [39, 42, 43, 44, 57, 58, 61, 62, 63, 64, 65, 66, 67, 69, 87, 90, 91, 99, 104, 105, 123, 124, 125], "yield": [39, 42, 43, 87, 90, 91], "next": [39, 42, 43, 87, 90, 91], "attr": [39, 42, 43, 87, 123, 124, 125], "edges_wher": [39, 43, 87, 90, 91], "edges_where_pred": [39, 42, 87, 90, 91], "nodes_wher": [39, 42, 43, 87, 91, 123, 124, 125], "nodes_where_pred": [39, 42, 43, 87, 90], "contain": [40, 41, 49, 50, 54, 57, 89], "per": [40, 41, 55, 89], "request": [40, 41, 76], "edge_attribut": [40, 41, 75, 76, 88, 89, 117, 123, 124, 125], "kwarg": [42, 90], "certain": [42, 43, 56, 79, 90, 91], "form": [42, 90, 126], "can": [42, 65, 90, 121, 123, 124, 125], "min": [42, 90], "max": [42, 90], "predic": [43, 91], "lambda": [43, 91], "callabl": [43, 91, 101], "you": [43, 91, 123, 124, 125], "want": [43, 91], "evalu": [43, 91], "2": [43, 91, 123, 124, 125], "emb": 44, "two": [44, 46, 61, 68, 100, 122, 126], "embed": [44, 47, 65, 66], "wa": 44, "success": 44, "otherwis": [44, 57, 61, 62, 65, 66, 67, 128], "importerror": [44, 65], "networkx": [44, 52, 65, 107], "instal": [44, 65, 126], "compon": [45, 77], "each": [46, 47, 88, 106, 108], "repres": [46, 51, 84, 85, 108], "breakpoint": 47, "find": [47, 100, 126], "face": [47, 99], "break": 47, "found": 47, "essenti": 47, "wall": 47, "maze": 47, "It": 47, "reli": 47, "repes": 47, "planar": [47, 65], "straight": [47, 65], "determin": 47, "order": 47, "around": 47, "alwai": 47, "turn": 47, "primarili": 47, "up": [47, 79], "specif": [47, 57, 58, 64], "For": 47, "applic": 47, "involv": 47, "dual": 47, "diagram": 47, "where": 47, "extern": 47, "forc": [47, 84, 85, 123, 124, 125], "appli": 47, "load": 47, "reaction": [47, 84], "input": 47, "classmethod": [48, 49, 50, 51, 52, 53, 54, 55, 121], "new": [48, 52, 68, 107], "inform": [48, 123, 124, 125], "about": 48, "from_networkx": [48, 107], "filepath": [49, 54, 104, 109], "json": [49, 50, 104, 105, 123, 124, 125], "file": [49, 54, 104, 109, 123, 124, 125, 128], "path": [49, 54, 61, 100, 104, 109, 123, 124, 125], "ha": [49, 50, 62, 63, 68], "correct": [49, 50], "schema": [49, 50, 121], "typeerror": [49, 50], "precis": [51, 54, 56, 79], "tol": [51, 56, 79, 123, 124], "to_lin": [51, 108, 109, 110], "from_nodes_and_edg": [51, 54, 55, 108], "from_pointcloud": [51, 53, 54, 110], "digraph": [52, 107], "to_networkx": 52, "from_edg": 52, "hshabl": 53, "to_nodes_and_edg": [53, 106, 109, 110], "from_lin": [53, 54, 55, 106, 123, 124, 125], "like": [54, 109], "url": 54, "geometr": [54, 56, 79], "to_obj": [54, 106, 108, 110], "cloud": 55, "3": [55, 125], "pointcloud": 55, "to_point": [55, 106, 108, 109], "node_gkei": 56, "toler": [56, 79, 123, 124], "geometric_kei": [56, 79, 123, 124, 125], "verifi": [57, 58, 61, 62, 63, 64, 66, 67], "taken": 57, "account": 57, "has_nod": 57, "edge_index": [59, 80, 123, 124, 125], "index_nod": [59, 80], "indic": [60, 108], "everi": [61, 101], "them": 61, "least": 62, "leaf": 63, "leav": 63, "is_node_connect": 63, "is_leaf": 64, "check": 65, "packag": 65, "drawn": 65, "without": [65, 66, 128], "shown": 65, "furthermor": 65, "fase": 66, "z": [67, 95, 96, 97, 98, 99], "zero": 67, "join": [68, 123, 124, 125], "incident": 68, "exactli": 68, "incid": 68, "modifi": [68, 126, 128], "replac": 68, "transfer": 68, "therefor": [68, 69], "normal": 69, "laplacian": [69, 81], "entri": 69, "diagon": 69, "d": 69, "l": 69, "dot": [69, 123, 124, 125], "centroid": [69, 81, 82, 101], "c": 69, "By": 69, "chang": 69, "sign": 69, "dsiplac": 69, "could": 69, "more": 69, "natur": 69, "wai": 69, "ring": [71, 81], "neighbors_out": [72, 73], "neighbors_in": [72, 74], "neighborhood": [72, 81], "unset_node_attribut": 75, "node_point": [77, 81, 82, 123, 124, 125], "node_laplacian": [77, 82], "node_neighborhood_centroid": [77, 81], "gkey_nod": 79, "node_coordin": [81, 82], "anchor": [84, 123, 124, 125], "residu": 85, "n": 86, "edge_sampl": 86, "match": [90, 91], "number_of_nod": 92, "number_of_edg": 93, "angl": [95, 96], "radian": [95, 96], "origin": [95, 96], "translat": [95, 96, 97, 98], "scale": [95, 96, 115, 116, 123, 124, 125], "transform": [95, 96, 97, 98, 112, 114, 115, 116], "copi": [96, 98, 113, 114, 116, 128], "x": [97, 98], "y": [97, 98], "factor": [97, 98, 101], "rotat": [97, 98, 115, 116], "as_str": 99, "hash": 99, "comparison": 99, "dure": 99, "version": [99, 126], "control": 99, "digest": 99, "hexadecim": 99, "rather": 99, "than": 99, "byte": 99, "mesh": [99, 101], "v1": 99, "v2": 99, "vertex_attribut": 99, "vertex_sampl": 99, "v3": 99, "shortest": 100, "root": 100, "goal": 100, "topologi": 100, "astar_shortest_path": 100, "kmax": [101, 123, 124, 125], "100": [101, 124, 125], "damp": 101, "callback": 101, "callback_arg": 101, "move": 101, "free": [101, 128], "maximum": 101, "user": 101, "execut": 101, "after": 101, "pass": 101, "except": [101, 102], "split": 102, "insert": 102, "posit": [102, 123, 124, 125], "valueerror": 102, "part": 102, "pretti": [104, 105], "nativ": [104, 105], "save": [104, 105], "newli": 107, "write": 109, "unset": [117, 118], "implicitli": [117, 118], "back": [117, 118], "store": [117, 118], "updat": [119, 120, 123, 124, 125], "update_default_node_attribut": 119, "update_default_edge_attribut": 120, "valid": 121, "against": 121, "": 121, "raw": 121, "__from_data__": 121, "simpl": [122, 126], "arch": [122, 126], "support": [122, 126], "membran": [122, 126], "down": [122, 126], "cantilev": [122, 126], "roof": [122, 126], "model": [123, 124, 125], "script": [123, 124, 125], "example_arch": 123, "3dm": [123, 124, 125], "__future__": [123, 124, 125], "absolute_import": [123, 124, 125], "divis": [123, 124, 125], "print_funct": [123, 124, 125], "o": [123, 124, 125], "compas_rhino": [123, 124, 125], "itertool": [123, 124], "pairwis": [123, 124, 125], "here": [123, 124, 125], "dirnam": [123, 124, 125], "__file__": [123, 124, 125], "guid": [123, 124, 125], "get_lin": [123, 124, 125], "layer": [123, 124, 125], "get_line_coordin": [123, 124, 125], "get_point": [123, 124, 125], "get_point_coordin": [123, 124, 125], "get_polylin": [123, 124, 125], "polylin": [123, 124, 125], "get_polyline_coordin": [123, 124, 125], "gkey_kei": [123, 124, 125], "gkei": [123, 124, 125], "b": [123, 124, 125], "a_gkei": [123, 124, 125], "b_gkei": [123, 124, 125], "append": [123, 124, 125], "els": [123, 124, 125], "export": [123, 124, 125], "json_dump": [123, 124, 125], "below": [123, 124, 125], "requir": [123, 124, 125, 127], "abov": [123, 124, 125, 128], "precompil": [123, 124, 125], "directli": [123, 124, 125], "math": [123, 124, 125], "fab": [123, 124, 125], "compas_view2": [123, 124, 125], "app": [123, 124, 125], "collect": [123, 124, 125], "shape": [123, 124, 125], "arrow": [123, 124, 125], "color": [123, 124, 125], "cylind": [123, 124, 125], "polygon": [123, 124, 125], "sum_vector": [123, 124, 125], "util": [123, 125], "remap_valu": [123, 124, 125], "json_load": [123, 124, 125], "30": [123, 124, 125], "10": [123, 124], "5000": [123, 124], "tol1": [123, 124, 125], "1e": [123, 124, 125], "tol2": [123, 124, 125], "tol3": [123, 124, 125], "4": [123, 124, 125], "viz": [123, 124, 125], "enumer": [123, 124, 125], "item": [123, 124, 125], "radii": [123, 124, 125], "f": [123, 124, 125], "01": [123, 124, 125], "viewer": [123, 124, 125], "anchor_properti": [123, 124, 125], "pointcolor": [123, 124, 125], "black": [123, 124, 125], "pointsiz": [123, 124, 125], "50": [123, 124, 125], "20": [123, 124, 125], "nbr": [123, 124, 125], "edgevector": [123, 124, 125], "forcevector": [123, 124, 125], "zip": [123, 124, 125], "green": [123, 124, 125], "darken": [123, 124, 125], "node_react": [123, 124, 125], "head_port": [123, 124, 125], "head_width": [123, 124, 125], "07": [123, 124, 125], "body_width": [123, 124, 125], "02": [123, 124, 125], "16": [123, 124, 125], "facecolor": [123, 124, 125], "pipe": [123, 124, 125], "pipe_properti": [123, 124, 125], "moment": [123, 124, 125], "ma": [123, 124, 125], "mx": [123, 124, 125], "my": [123, 124, 125], "mz": [123, 124, 125], "mb": [123, 124, 125], "aa": [123, 124, 125], "03": 123, "bb": [123, 124, 125], "axial": [123, 124, 125], "red": [123, 124, 125], "blue": [123, 124, 125], "from_line_and_radiu": [123, 124, 125], "show_point": [123, 124, 125], "linewidth": [123, 124, 125], "show": [123, 124, 125], "example_cantilev": 124, "spline_polylin": [124, 125], "cable_polylin": [124, 125], "inpiut": [124, 125], "turtl": 124, "7": [124, 125], "alpha": [124, 125], "0005": 124, "001": 124, "example_roof": 125, "tie_lin": 125, "97": 125, "10000": 125, "005": 125, "dynam": 126, "relax": 126, "introduct": 126, "tutori": 126, "api": 126, "licens": 126, "modul": 126, "Not": 127, "yet": 127, "To": 127, "compas_assembli": 127, "local": 127, "sourc": 127, "dev": 127, "git": 127, "pull": 127, "github": 127, "blockresearchgroup": 127, "cd": 127, "pip": 127, "mit": 128, "eth": 128, "zurich": 128, "block": 128, "research": 128, "permiss": 128, "herebi": 128, "grant": 128, "charg": 128, "person": 128, "obtain": 128, "softwar": 128, "associ": 128, "document": 128, "deal": 128, "restrict": 128, "limit": 128, "right": 128, "merg": 128, "publish": 128, "distribut": 128, "sublicens": 128, "sell": 128, "permit": 128, "whom": 128, "furnish": 128, "do": 128, "so": 128, "subject": 128, "copyright": 128, "notic": 128, "shall": 128, "substanti": 128, "portion": 128, "THE": 128, "AS": 128, "warranti": 128, "OF": 128, "kind": 128, "express": 128, "OR": 128, "impli": 128, "BUT": 128, "NOT": 128, "TO": 128, "merchant": 128, "fit": 128, "FOR": 128, "particular": 128, "purpos": 128, "AND": 128, "noninfring": 128, "IN": 128, "NO": 128, "event": 128, "author": 128, "holder": 128, "BE": 128, "liabl": 128, "claim": 128, "damag": 128, "liabil": 128, "whether": 128, "action": 128, "contract": 128, "tort": 128, "aris": 128, "out": 128, "WITH": 128, "see": 129, "now": 129}, "objects": {"compas_bender.bend": [[4, 0, 1, "", "bend_splines"]], "compas_bender.datastructures": [[5, 1, 1, "", "BendNetwork"]], "compas_bender.datastructures.BendNetwork": [[6, 2, 1, "", "ToString"], [7, 2, 1, "", "aabb"], [8, 2, 1, "", "add_edge"], [9, 2, 1, "", "add_node"], [10, 2, 1, "", "adjacency_matrix"], [11, 2, 1, "", "clear"], [12, 2, 1, "", "complement"], [13, 2, 1, "", "compute_aabb"], [14, 2, 1, "", "compute_obb"], [15, 2, 1, "", "connected_edges"], [16, 2, 1, "", "connected_nodes"], [17, 2, 1, "", "connectivity_matrix"], [18, 2, 1, "", "copy"], [19, 2, 1, "", "count_crossings"], [20, 2, 1, "", "degree"], [21, 2, 1, "", "degree_in"], [22, 2, 1, "", "degree_matrix"], [23, 2, 1, "", "degree_out"], [24, 2, 1, "", "delete_edge"], [25, 2, 1, "", "delete_node"], [26, 2, 1, "", "edge_attribute"], [27, 2, 1, "", "edge_attributes"], [28, 2, 1, "", "edge_coordinates"], [29, 2, 1, "", "edge_direction"], [30, 2, 1, "", "edge_end"], [31, 2, 1, "", "edge_index"], [32, 2, 1, "", "edge_length"], [33, 2, 1, "", "edge_line"], [34, 2, 1, "", "edge_midpoint"], [35, 2, 1, "", "edge_point"], [36, 2, 1, "", "edge_sample"], [37, 2, 1, "", "edge_start"], [38, 2, 1, "", "edge_vector"], [39, 2, 1, "", "edges"], [40, 2, 1, "", "edges_attribute"], [41, 2, 1, "", "edges_attributes"], [42, 2, 1, "", "edges_where"], [43, 2, 1, "", "edges_where_predicate"], [44, 2, 1, "", "embed_in_plane"], [45, 2, 1, "", "exploded"], [46, 2, 1, "", "find_crossings"], [47, 2, 1, "", "find_cycles"], [48, 2, 1, "", "from_edges"], [49, 2, 1, "", "from_json"], [50, 2, 1, "", "from_jsonstring"], [51, 2, 1, "", "from_lines"], [52, 2, 1, "", "from_networkx"], [53, 2, 1, "", "from_nodes_and_edges"], [54, 2, 1, "", "from_obj"], [55, 2, 1, "", "from_pointcloud"], [56, 2, 1, "", "gkey_node"], [57, 2, 1, "", "has_edge"], [58, 2, 1, "", "has_node"], [59, 2, 1, "", "index_edge"], [60, 2, 1, "", "index_node"], [61, 2, 1, "", "is_connected"], [62, 2, 1, "", "is_crossed"], [63, 2, 1, "", "is_leaf"], [64, 2, 1, "", "is_node_connected"], [65, 2, 1, "", "is_planar"], [66, 2, 1, "", "is_planar_embedding"], [67, 2, 1, "", "is_xy"], [68, 2, 1, "", "join_edges"], [69, 2, 1, "", "laplacian_matrix"], [70, 2, 1, "", "leaves"], [71, 2, 1, "", "neighborhood"], [72, 2, 1, "", "neighbors"], [73, 2, 1, "", "neighbors_in"], [74, 2, 1, "", "neighbors_out"], [75, 2, 1, "", "node_attribute"], [76, 2, 1, "", "node_attributes"], [77, 2, 1, "", "node_coordinates"], [78, 2, 1, "", "node_edges"], [79, 2, 1, "", "node_gkey"], [80, 2, 1, "", "node_index"], [81, 2, 1, "", "node_laplacian"], [82, 2, 1, "", "node_neighborhood_centroid"], [83, 2, 1, "", "node_point"], [84, 2, 1, "", "node_reaction"], [85, 2, 1, "", "node_residual"], [86, 2, 1, "", "node_sample"], [87, 2, 1, "", "nodes"], [88, 2, 1, "", "nodes_attribute"], [89, 2, 1, "", "nodes_attributes"], [90, 2, 1, "", "nodes_where"], [91, 2, 1, "", "nodes_where_predicate"], [92, 2, 1, "", "number_of_edges"], [93, 2, 1, "", "number_of_nodes"], [94, 2, 1, "", "obb"], [95, 2, 1, "", "rotate"], [96, 2, 1, "", "rotated"], [97, 2, 1, "", "scale"], [98, 2, 1, "", "scaled"], [99, 2, 1, "", "sha256"], [100, 2, 1, "", "shortest_path"], [101, 2, 1, "", "smooth"], [102, 2, 1, "", "split_edge"], [103, 2, 1, "", "summary"], [104, 2, 1, "", "to_json"], [105, 2, 1, "", "to_jsonstring"], [106, 2, 1, "", "to_lines"], [107, 2, 1, "", "to_networkx"], [108, 2, 1, "", "to_nodes_and_edges"], [109, 2, 1, "", "to_obj"], [110, 2, 1, "", "to_points"], [111, 2, 1, "", "transform"], [112, 2, 1, "", "transform_numpy"], [113, 2, 1, "", "transformed"], [114, 2, 1, "", "transformed_numpy"], [115, 2, 1, "", "translate"], [116, 2, 1, "", "translated"], [117, 2, 1, "", "unset_edge_attribute"], [118, 2, 1, "", "unset_node_attribute"], [119, 2, 1, "", "update_default_edge_attributes"], [120, 2, 1, "", "update_default_node_attributes"], [121, 2, 1, "", "validate_data"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "compas_bend": 1, "bend": 2, "function": 2, "datastructur": 3, "class": 3, "bend_splin": 4, "bendnetwork": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "tostr": 6, "aabb": 7, "add_edg": 8, "add_nod": 9, "adjacency_matrix": 10, "clear": 11, "complement": 12, "compute_aabb": 13, "compute_obb": 14, "connected_edg": 15, "connected_nod": 16, "connectivity_matrix": 17, "copi": 18, "count_cross": 19, "degre": 20, "degree_in": 21, "degree_matrix": 22, "degree_out": 23, "delete_edg": 24, "delete_nod": 25, "edge_attribut": [26, 27], "edge_coordin": 28, "edge_direct": 29, "edge_end": 30, "edge_index": 31, "edge_length": 32, "edge_lin": 33, "edge_midpoint": 34, "edge_point": 35, "edge_sampl": 36, "edge_start": 37, "edge_vector": 38, "edg": 39, "edges_attribut": [40, 41], "edges_wher": 42, "edges_where_pred": 43, "embed_in_plan": 44, "explod": 45, "find_cross": 46, "find_cycl": 47, "from_edg": 48, "from_json": 49, "from_jsonstr": 50, "from_lin": 51, "from_networkx": 52, "from_nodes_and_edg": 53, "from_obj": 54, "from_pointcloud": 55, "gkey_nod": 56, "has_edg": 57, "has_nod": 58, "index_edg": 59, "index_nod": 60, "is_connect": 61, "is_cross": 62, "is_leaf": 63, "is_node_connect": 64, "is_planar": 65, "is_planar_embed": 66, "is_xi": 67, "join_edg": 68, "laplacian_matrix": 69, "leav": 70, "neighborhood": 71, "neighbor": 72, "neighbors_in": 73, "neighbors_out": 74, "node_attribut": [75, 76], "node_coordin": 77, "node_edg": 78, "node_gkei": 79, "node_index": 80, "node_laplacian": 81, "node_neighborhood_centroid": 82, "node_point": 83, "node_react": 84, "node_residu": 85, "node_sampl": 86, "node": 87, "nodes_attribut": [88, 89], "nodes_wher": 90, "nodes_where_pred": 91, "number_of_edg": 92, "number_of_nod": 93, "obb": 94, "rotat": [95, 96], "scale": [97, 98], "sha256": 99, "shortest_path": 100, "smooth": 101, "split_edg": 102, "summari": 103, "to_json": 104, "to_jsonstr": 105, "to_lin": 106, "to_networkx": 107, "to_nodes_and_edg": 108, "to_obj": 109, "to_point": 110, "transform": [111, 113], "transform_numpi": 112, "transformed_numpi": 114, "translat": [115, 116], "unset_edge_attribut": 117, "unset_node_attribut": 118, "update_default_edge_attribut": 119, "update_default_node_attribut": 120, "validate_data": 121, "exampl": 122, "simpl": 123, "arch": [123, 125], "support": [123, 124, 125], "membran": [123, 124, 125], "rhino": [123, 124, 125], "input": [123, 124, 125], "equilibrium": [123, 124, 125], "ti": [124, 125], "down": 124, "cantilev": 124, "spline": 124, "roof": 125, "two": 125, "compa": 126, "bender": 126, "tabl": 126, "content": 126, "indic": 126, "instal": 127, "stabl": 127, "develop": 127, "licens": 128, "tutori": 129}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "compas_bender": [[1, "compas-bender"]], "bend": [[2, "bend"]], "Functions": [[2, "functions"]], "datastructures": [[3, "datastructures"]], "Classes": [[3, "classes"]], "bend_splines": [[4, "bend-splines"]], "BendNetwork": [[5, "bendnetwork"]], "BendNetwork.ToString": [[6, "bendnetwork-tostring"]], "BendNetwork.aabb": [[7, "bendnetwork-aabb"]], "BendNetwork.add_edge": [[8, "bendnetwork-add-edge"]], "BendNetwork.add_node": [[9, "bendnetwork-add-node"]], "BendNetwork.adjacency_matrix": [[10, "bendnetwork-adjacency-matrix"]], "BendNetwork.clear": [[11, "bendnetwork-clear"]], "BendNetwork.complement": [[12, "bendnetwork-complement"]], "BendNetwork.compute_aabb": [[13, "bendnetwork-compute-aabb"]], "BendNetwork.compute_obb": [[14, "bendnetwork-compute-obb"]], "BendNetwork.connected_edges": [[15, "bendnetwork-connected-edges"]], "BendNetwork.connected_nodes": [[16, "bendnetwork-connected-nodes"]], "BendNetwork.connectivity_matrix": [[17, "bendnetwork-connectivity-matrix"]], "BendNetwork.copy": [[18, "bendnetwork-copy"]], "BendNetwork.count_crossings": [[19, "bendnetwork-count-crossings"]], "BendNetwork.degree": [[20, "bendnetwork-degree"]], "BendNetwork.degree_in": [[21, "bendnetwork-degree-in"]], "BendNetwork.degree_matrix": [[22, "bendnetwork-degree-matrix"]], "BendNetwork.degree_out": [[23, "bendnetwork-degree-out"]], "BendNetwork.delete_edge": [[24, "bendnetwork-delete-edge"]], "BendNetwork.delete_node": [[25, "bendnetwork-delete-node"]], "BendNetwork.edge_attribute": [[26, "bendnetwork-edge-attribute"]], "BendNetwork.edge_attributes": [[27, "bendnetwork-edge-attributes"]], "BendNetwork.edge_coordinates": [[28, "bendnetwork-edge-coordinates"]], "BendNetwork.edge_direction": [[29, "bendnetwork-edge-direction"]], "BendNetwork.edge_end": [[30, "bendnetwork-edge-end"]], "BendNetwork.edge_index": [[31, "bendnetwork-edge-index"]], "BendNetwork.edge_length": [[32, "bendnetwork-edge-length"]], "BendNetwork.edge_line": [[33, "bendnetwork-edge-line"]], "BendNetwork.edge_midpoint": [[34, "bendnetwork-edge-midpoint"]], "BendNetwork.edge_point": [[35, "bendnetwork-edge-point"]], "BendNetwork.edge_sample": [[36, "bendnetwork-edge-sample"]], "BendNetwork.edge_start": [[37, "bendnetwork-edge-start"]], "BendNetwork.edge_vector": [[38, "bendnetwork-edge-vector"]], "BendNetwork.edges": [[39, "bendnetwork-edges"]], "BendNetwork.edges_attribute": [[40, "bendnetwork-edges-attribute"]], "BendNetwork.edges_attributes": [[41, "bendnetwork-edges-attributes"]], "BendNetwork.edges_where": [[42, "bendnetwork-edges-where"]], "BendNetwork.edges_where_predicate": [[43, "bendnetwork-edges-where-predicate"]], "BendNetwork.embed_in_plane": [[44, "bendnetwork-embed-in-plane"]], "BendNetwork.exploded": [[45, "bendnetwork-exploded"]], "BendNetwork.find_crossings": [[46, "bendnetwork-find-crossings"]], "BendNetwork.find_cycles": [[47, "bendnetwork-find-cycles"]], "BendNetwork.from_edges": [[48, "bendnetwork-from-edges"]], "BendNetwork.from_json": [[49, "bendnetwork-from-json"]], "BendNetwork.from_jsonstring": [[50, "bendnetwork-from-jsonstring"]], "BendNetwork.from_lines": [[51, "bendnetwork-from-lines"]], "BendNetwork.from_networkx": [[52, "bendnetwork-from-networkx"]], "BendNetwork.from_nodes_and_edges": [[53, "bendnetwork-from-nodes-and-edges"]], "BendNetwork.from_obj": [[54, "bendnetwork-from-obj"]], "BendNetwork.from_pointcloud": [[55, "bendnetwork-from-pointcloud"]], "BendNetwork.gkey_node": [[56, "bendnetwork-gkey-node"]], "BendNetwork.has_edge": [[57, "bendnetwork-has-edge"]], "BendNetwork.has_node": [[58, "bendnetwork-has-node"]], "BendNetwork.index_edge": [[59, "bendnetwork-index-edge"]], "BendNetwork.index_node": [[60, "bendnetwork-index-node"]], "BendNetwork.is_connected": [[61, "bendnetwork-is-connected"]], "BendNetwork.is_crossed": [[62, "bendnetwork-is-crossed"]], "BendNetwork.is_leaf": [[63, "bendnetwork-is-leaf"]], "BendNetwork.is_node_connected": [[64, "bendnetwork-is-node-connected"]], "BendNetwork.is_planar": [[65, "bendnetwork-is-planar"]], "BendNetwork.is_planar_embedding": [[66, "bendnetwork-is-planar-embedding"]], "BendNetwork.is_xy": [[67, "bendnetwork-is-xy"]], "BendNetwork.join_edges": [[68, "bendnetwork-join-edges"]], "BendNetwork.laplacian_matrix": [[69, "bendnetwork-laplacian-matrix"]], "BendNetwork.leaves": [[70, "bendnetwork-leaves"]], "BendNetwork.neighborhood": [[71, "bendnetwork-neighborhood"]], "BendNetwork.neighbors": [[72, "bendnetwork-neighbors"]], "BendNetwork.neighbors_in": [[73, "bendnetwork-neighbors-in"]], "BendNetwork.neighbors_out": [[74, "bendnetwork-neighbors-out"]], "BendNetwork.node_attribute": [[75, "bendnetwork-node-attribute"]], "BendNetwork.node_attributes": [[76, "bendnetwork-node-attributes"]], "BendNetwork.node_coordinates": [[77, "bendnetwork-node-coordinates"]], "BendNetwork.node_edges": [[78, "bendnetwork-node-edges"]], "BendNetwork.node_gkey": [[79, "bendnetwork-node-gkey"]], "BendNetwork.node_index": [[80, "bendnetwork-node-index"]], "BendNetwork.node_laplacian": [[81, "bendnetwork-node-laplacian"]], "BendNetwork.node_neighborhood_centroid": [[82, "bendnetwork-node-neighborhood-centroid"]], "BendNetwork.node_point": [[83, "bendnetwork-node-point"]], "BendNetwork.node_reaction": [[84, "bendnetwork-node-reaction"]], "BendNetwork.node_residual": [[85, "bendnetwork-node-residual"]], "BendNetwork.node_sample": [[86, "bendnetwork-node-sample"]], "BendNetwork.nodes": [[87, "bendnetwork-nodes"]], "BendNetwork.nodes_attribute": [[88, "bendnetwork-nodes-attribute"]], "BendNetwork.nodes_attributes": [[89, "bendnetwork-nodes-attributes"]], "BendNetwork.nodes_where": [[90, "bendnetwork-nodes-where"]], "BendNetwork.nodes_where_predicate": [[91, "bendnetwork-nodes-where-predicate"]], "BendNetwork.number_of_edges": [[92, "bendnetwork-number-of-edges"]], "BendNetwork.number_of_nodes": [[93, "bendnetwork-number-of-nodes"]], "BendNetwork.obb": [[94, "bendnetwork-obb"]], "BendNetwork.rotate": [[95, "bendnetwork-rotate"]], "BendNetwork.rotated": [[96, "bendnetwork-rotated"]], "BendNetwork.scale": [[97, "bendnetwork-scale"]], "BendNetwork.scaled": [[98, "bendnetwork-scaled"]], "BendNetwork.sha256": [[99, "bendnetwork-sha256"]], "BendNetwork.shortest_path": [[100, "bendnetwork-shortest-path"]], "BendNetwork.smooth": [[101, "bendnetwork-smooth"]], "BendNetwork.split_edge": [[102, "bendnetwork-split-edge"]], "BendNetwork.summary": [[103, "bendnetwork-summary"]], "BendNetwork.to_json": [[104, "bendnetwork-to-json"]], "BendNetwork.to_jsonstring": [[105, "bendnetwork-to-jsonstring"]], "BendNetwork.to_lines": [[106, "bendnetwork-to-lines"]], "BendNetwork.to_networkx": [[107, "bendnetwork-to-networkx"]], "BendNetwork.to_nodes_and_edges": [[108, "bendnetwork-to-nodes-and-edges"]], "BendNetwork.to_obj": [[109, "bendnetwork-to-obj"]], "BendNetwork.to_points": [[110, "bendnetwork-to-points"]], "BendNetwork.transform": [[111, "bendnetwork-transform"]], "BendNetwork.transform_numpy": [[112, "bendnetwork-transform-numpy"]], "BendNetwork.transformed": [[113, "bendnetwork-transformed"]], "BendNetwork.transformed_numpy": [[114, "bendnetwork-transformed-numpy"]], "BendNetwork.translate": [[115, "bendnetwork-translate"]], "BendNetwork.translated": [[116, "bendnetwork-translated"]], "BendNetwork.unset_edge_attribute": [[117, "bendnetwork-unset-edge-attribute"]], "BendNetwork.unset_node_attribute": [[118, "bendnetwork-unset-node-attribute"]], "BendNetwork.update_default_edge_attributes": [[119, "bendnetwork-update-default-edge-attributes"]], "BendNetwork.update_default_node_attributes": [[120, "bendnetwork-update-default-node-attributes"]], "BendNetwork.validate_data": [[121, "bendnetwork-validate-data"]], "Examples": [[122, "examples"]], "Simple arch supported membrane": [[123, "simple-arch-supported-membrane"]], "Rhino input": [[123, "rhino-input"], [124, "rhino-input"], [125, "rhino-input"]], "Equilibrium": [[123, "equilibrium"], [124, "equilibrium"], [125, "equilibrium"]], "Membrane supported by a tied down cantilevering spline": [[124, "membrane-supported-by-a-tied-down-cantilevering-spline"]], "Membrane roof with supporting arch and two ties": [[125, "membrane-roof-with-supporting-arch-and-two-ties"]], "COMPAS Bender": [[126, "compas-bender"]], "Table of Contents": [[126, "table-of-contents"]], "Indices and tables": [[126, "indices-and-tables"]], "Installation": [[127, "installation"]], "Stable": [[127, "stable"]], "Development": [[127, "development"]], "License": [[128, "license"]], "Tutorial": [[129, "tutorial"]]}, "indexentries": {"bend_splines() (in module compas_bender.bend)": [[4, "compas_bender.bend.bend_splines"]], "bendnetwork (class in compas_bender.datastructures)": [[5, "compas_bender.datastructures.BendNetwork"]], "tostring() (compas_bender.datastructures.bendnetwork method)": [[6, "compas_bender.datastructures.BendNetwork.ToString"]], "aabb() (compas_bender.datastructures.bendnetwork method)": [[7, "compas_bender.datastructures.BendNetwork.aabb"]], "add_edge() (compas_bender.datastructures.bendnetwork method)": [[8, "compas_bender.datastructures.BendNetwork.add_edge"]], "add_node() (compas_bender.datastructures.bendnetwork method)": [[9, "compas_bender.datastructures.BendNetwork.add_node"]], "adjacency_matrix() (compas_bender.datastructures.bendnetwork method)": [[10, "compas_bender.datastructures.BendNetwork.adjacency_matrix"]], "clear() (compas_bender.datastructures.bendnetwork method)": [[11, "compas_bender.datastructures.BendNetwork.clear"]], "complement() (compas_bender.datastructures.bendnetwork method)": [[12, "compas_bender.datastructures.BendNetwork.complement"]], "compute_aabb() (compas_bender.datastructures.bendnetwork method)": [[13, "compas_bender.datastructures.BendNetwork.compute_aabb"]], "compute_obb() (compas_bender.datastructures.bendnetwork method)": [[14, "compas_bender.datastructures.BendNetwork.compute_obb"]], "connected_edges() (compas_bender.datastructures.bendnetwork method)": [[15, "compas_bender.datastructures.BendNetwork.connected_edges"]], "connected_nodes() (compas_bender.datastructures.bendnetwork method)": [[16, "compas_bender.datastructures.BendNetwork.connected_nodes"]], "connectivity_matrix() (compas_bender.datastructures.bendnetwork method)": [[17, "compas_bender.datastructures.BendNetwork.connectivity_matrix"]], "copy() (compas_bender.datastructures.bendnetwork method)": [[18, "compas_bender.datastructures.BendNetwork.copy"]], "count_crossings() (compas_bender.datastructures.bendnetwork method)": [[19, "compas_bender.datastructures.BendNetwork.count_crossings"]], "degree() (compas_bender.datastructures.bendnetwork method)": [[20, "compas_bender.datastructures.BendNetwork.degree"]], "degree_in() (compas_bender.datastructures.bendnetwork method)": [[21, "compas_bender.datastructures.BendNetwork.degree_in"]], "degree_matrix() (compas_bender.datastructures.bendnetwork method)": [[22, "compas_bender.datastructures.BendNetwork.degree_matrix"]], "degree_out() (compas_bender.datastructures.bendnetwork method)": [[23, "compas_bender.datastructures.BendNetwork.degree_out"]], "delete_edge() (compas_bender.datastructures.bendnetwork method)": [[24, "compas_bender.datastructures.BendNetwork.delete_edge"]], "delete_node() (compas_bender.datastructures.bendnetwork method)": [[25, "compas_bender.datastructures.BendNetwork.delete_node"]], "edge_attribute() (compas_bender.datastructures.bendnetwork method)": [[26, "compas_bender.datastructures.BendNetwork.edge_attribute"]], "edge_attributes() (compas_bender.datastructures.bendnetwork method)": [[27, "compas_bender.datastructures.BendNetwork.edge_attributes"]], "edge_coordinates() (compas_bender.datastructures.bendnetwork method)": [[28, "compas_bender.datastructures.BendNetwork.edge_coordinates"]], "edge_direction() (compas_bender.datastructures.bendnetwork method)": [[29, "compas_bender.datastructures.BendNetwork.edge_direction"]], "edge_end() (compas_bender.datastructures.bendnetwork method)": [[30, "compas_bender.datastructures.BendNetwork.edge_end"]], "edge_index() (compas_bender.datastructures.bendnetwork method)": [[31, "compas_bender.datastructures.BendNetwork.edge_index"]], "edge_length() (compas_bender.datastructures.bendnetwork method)": [[32, "compas_bender.datastructures.BendNetwork.edge_length"]], "edge_line() (compas_bender.datastructures.bendnetwork method)": [[33, "compas_bender.datastructures.BendNetwork.edge_line"]], "edge_midpoint() (compas_bender.datastructures.bendnetwork method)": [[34, "compas_bender.datastructures.BendNetwork.edge_midpoint"]], "edge_point() (compas_bender.datastructures.bendnetwork method)": [[35, "compas_bender.datastructures.BendNetwork.edge_point"]], "edge_sample() (compas_bender.datastructures.bendnetwork method)": [[36, "compas_bender.datastructures.BendNetwork.edge_sample"]], "edge_start() (compas_bender.datastructures.bendnetwork method)": [[37, "compas_bender.datastructures.BendNetwork.edge_start"]], "edge_vector() (compas_bender.datastructures.bendnetwork method)": [[38, "compas_bender.datastructures.BendNetwork.edge_vector"]], "edges() (compas_bender.datastructures.bendnetwork method)": [[39, "compas_bender.datastructures.BendNetwork.edges"]], "edges_attribute() (compas_bender.datastructures.bendnetwork method)": [[40, "compas_bender.datastructures.BendNetwork.edges_attribute"]], "edges_attributes() (compas_bender.datastructures.bendnetwork method)": [[41, "compas_bender.datastructures.BendNetwork.edges_attributes"]], "edges_where() (compas_bender.datastructures.bendnetwork method)": [[42, "compas_bender.datastructures.BendNetwork.edges_where"]], "edges_where_predicate() (compas_bender.datastructures.bendnetwork method)": [[43, "compas_bender.datastructures.BendNetwork.edges_where_predicate"]], "embed_in_plane() (compas_bender.datastructures.bendnetwork method)": [[44, "compas_bender.datastructures.BendNetwork.embed_in_plane"]], "exploded() (compas_bender.datastructures.bendnetwork method)": [[45, "compas_bender.datastructures.BendNetwork.exploded"]], "find_crossings() (compas_bender.datastructures.bendnetwork method)": [[46, "compas_bender.datastructures.BendNetwork.find_crossings"]], "find_cycles() (compas_bender.datastructures.bendnetwork method)": [[47, "compas_bender.datastructures.BendNetwork.find_cycles"]], "from_edges() (compas_bender.datastructures.bendnetwork class method)": [[48, "compas_bender.datastructures.BendNetwork.from_edges"]], "from_json() (compas_bender.datastructures.bendnetwork class method)": [[49, "compas_bender.datastructures.BendNetwork.from_json"]], "from_jsonstring() (compas_bender.datastructures.bendnetwork class method)": [[50, "compas_bender.datastructures.BendNetwork.from_jsonstring"]], "from_lines() (compas_bender.datastructures.bendnetwork class method)": [[51, "compas_bender.datastructures.BendNetwork.from_lines"]], "from_networkx() (compas_bender.datastructures.bendnetwork class method)": [[52, "compas_bender.datastructures.BendNetwork.from_networkx"]], "from_nodes_and_edges() (compas_bender.datastructures.bendnetwork class method)": [[53, "compas_bender.datastructures.BendNetwork.from_nodes_and_edges"]], "from_obj() (compas_bender.datastructures.bendnetwork class method)": [[54, "compas_bender.datastructures.BendNetwork.from_obj"]], "from_pointcloud() (compas_bender.datastructures.bendnetwork class method)": [[55, "compas_bender.datastructures.BendNetwork.from_pointcloud"]], "gkey_node() (compas_bender.datastructures.bendnetwork method)": [[56, "compas_bender.datastructures.BendNetwork.gkey_node"]], "has_edge() (compas_bender.datastructures.bendnetwork method)": [[57, "compas_bender.datastructures.BendNetwork.has_edge"]], "has_node() (compas_bender.datastructures.bendnetwork method)": [[58, "compas_bender.datastructures.BendNetwork.has_node"]], "index_edge() (compas_bender.datastructures.bendnetwork method)": [[59, "compas_bender.datastructures.BendNetwork.index_edge"]], "index_node() (compas_bender.datastructures.bendnetwork method)": [[60, "compas_bender.datastructures.BendNetwork.index_node"]], "is_connected() (compas_bender.datastructures.bendnetwork method)": [[61, "compas_bender.datastructures.BendNetwork.is_connected"]], "is_crossed() (compas_bender.datastructures.bendnetwork method)": [[62, "compas_bender.datastructures.BendNetwork.is_crossed"]], "is_leaf() (compas_bender.datastructures.bendnetwork method)": [[63, "compas_bender.datastructures.BendNetwork.is_leaf"]], "is_node_connected() (compas_bender.datastructures.bendnetwork method)": [[64, "compas_bender.datastructures.BendNetwork.is_node_connected"]], "is_planar() (compas_bender.datastructures.bendnetwork method)": [[65, "compas_bender.datastructures.BendNetwork.is_planar"]], "is_planar_embedding() (compas_bender.datastructures.bendnetwork method)": [[66, "compas_bender.datastructures.BendNetwork.is_planar_embedding"]], "is_xy() (compas_bender.datastructures.bendnetwork method)": [[67, "compas_bender.datastructures.BendNetwork.is_xy"]], "join_edges() (compas_bender.datastructures.bendnetwork method)": [[68, "compas_bender.datastructures.BendNetwork.join_edges"]], "laplacian_matrix() (compas_bender.datastructures.bendnetwork method)": [[69, "compas_bender.datastructures.BendNetwork.laplacian_matrix"]], "leaves() (compas_bender.datastructures.bendnetwork method)": [[70, "compas_bender.datastructures.BendNetwork.leaves"]], "neighborhood() (compas_bender.datastructures.bendnetwork method)": [[71, "compas_bender.datastructures.BendNetwork.neighborhood"]], "neighbors() (compas_bender.datastructures.bendnetwork method)": [[72, "compas_bender.datastructures.BendNetwork.neighbors"]], "neighbors_in() (compas_bender.datastructures.bendnetwork method)": [[73, "compas_bender.datastructures.BendNetwork.neighbors_in"]], "neighbors_out() (compas_bender.datastructures.bendnetwork method)": [[74, "compas_bender.datastructures.BendNetwork.neighbors_out"]], "node_attribute() (compas_bender.datastructures.bendnetwork method)": [[75, "compas_bender.datastructures.BendNetwork.node_attribute"]], "node_attributes() (compas_bender.datastructures.bendnetwork method)": [[76, "compas_bender.datastructures.BendNetwork.node_attributes"]], "node_coordinates() (compas_bender.datastructures.bendnetwork method)": [[77, "compas_bender.datastructures.BendNetwork.node_coordinates"]], "node_edges() (compas_bender.datastructures.bendnetwork method)": [[78, "compas_bender.datastructures.BendNetwork.node_edges"]], "node_gkey() (compas_bender.datastructures.bendnetwork method)": [[79, "compas_bender.datastructures.BendNetwork.node_gkey"]], "node_index() (compas_bender.datastructures.bendnetwork method)": [[80, "compas_bender.datastructures.BendNetwork.node_index"]], "node_laplacian() (compas_bender.datastructures.bendnetwork method)": [[81, "compas_bender.datastructures.BendNetwork.node_laplacian"]], "node_neighborhood_centroid() (compas_bender.datastructures.bendnetwork method)": [[82, "compas_bender.datastructures.BendNetwork.node_neighborhood_centroid"]], "node_point() (compas_bender.datastructures.bendnetwork method)": [[83, "compas_bender.datastructures.BendNetwork.node_point"]], "node_reaction() (compas_bender.datastructures.bendnetwork method)": [[84, "compas_bender.datastructures.BendNetwork.node_reaction"]], "node_residual() (compas_bender.datastructures.bendnetwork method)": [[85, "compas_bender.datastructures.BendNetwork.node_residual"]], "node_sample() (compas_bender.datastructures.bendnetwork method)": [[86, "compas_bender.datastructures.BendNetwork.node_sample"]], "nodes() (compas_bender.datastructures.bendnetwork method)": [[87, "compas_bender.datastructures.BendNetwork.nodes"]], "nodes_attribute() (compas_bender.datastructures.bendnetwork method)": [[88, "compas_bender.datastructures.BendNetwork.nodes_attribute"]], "nodes_attributes() (compas_bender.datastructures.bendnetwork method)": [[89, "compas_bender.datastructures.BendNetwork.nodes_attributes"]], "nodes_where() (compas_bender.datastructures.bendnetwork method)": [[90, "compas_bender.datastructures.BendNetwork.nodes_where"]], "nodes_where_predicate() (compas_bender.datastructures.bendnetwork method)": [[91, "compas_bender.datastructures.BendNetwork.nodes_where_predicate"]], "number_of_edges() (compas_bender.datastructures.bendnetwork method)": [[92, "compas_bender.datastructures.BendNetwork.number_of_edges"]], "number_of_nodes() (compas_bender.datastructures.bendnetwork method)": [[93, "compas_bender.datastructures.BendNetwork.number_of_nodes"]], "obb() (compas_bender.datastructures.bendnetwork method)": [[94, "compas_bender.datastructures.BendNetwork.obb"]], "rotate() (compas_bender.datastructures.bendnetwork method)": [[95, "compas_bender.datastructures.BendNetwork.rotate"]], "rotated() (compas_bender.datastructures.bendnetwork method)": [[96, "compas_bender.datastructures.BendNetwork.rotated"]], "scale() (compas_bender.datastructures.bendnetwork method)": [[97, "compas_bender.datastructures.BendNetwork.scale"]], "scaled() (compas_bender.datastructures.bendnetwork method)": [[98, "compas_bender.datastructures.BendNetwork.scaled"]], "sha256() (compas_bender.datastructures.bendnetwork method)": [[99, "compas_bender.datastructures.BendNetwork.sha256"]], "shortest_path() (compas_bender.datastructures.bendnetwork method)": [[100, "compas_bender.datastructures.BendNetwork.shortest_path"]], "smooth() (compas_bender.datastructures.bendnetwork method)": [[101, "compas_bender.datastructures.BendNetwork.smooth"]], "split_edge() (compas_bender.datastructures.bendnetwork method)": [[102, "compas_bender.datastructures.BendNetwork.split_edge"]], "summary() (compas_bender.datastructures.bendnetwork method)": [[103, "compas_bender.datastructures.BendNetwork.summary"]], "to_json() (compas_bender.datastructures.bendnetwork method)": [[104, "compas_bender.datastructures.BendNetwork.to_json"]], "to_jsonstring() (compas_bender.datastructures.bendnetwork method)": [[105, "compas_bender.datastructures.BendNetwork.to_jsonstring"]], "to_lines() (compas_bender.datastructures.bendnetwork method)": [[106, "compas_bender.datastructures.BendNetwork.to_lines"]], "to_networkx() (compas_bender.datastructures.bendnetwork method)": [[107, "compas_bender.datastructures.BendNetwork.to_networkx"]], "to_nodes_and_edges() (compas_bender.datastructures.bendnetwork method)": [[108, "compas_bender.datastructures.BendNetwork.to_nodes_and_edges"]], "to_obj() (compas_bender.datastructures.bendnetwork method)": [[109, "compas_bender.datastructures.BendNetwork.to_obj"]], "to_points() (compas_bender.datastructures.bendnetwork method)": [[110, "compas_bender.datastructures.BendNetwork.to_points"]], "transform() (compas_bender.datastructures.bendnetwork method)": [[111, "compas_bender.datastructures.BendNetwork.transform"]], "transform_numpy() (compas_bender.datastructures.bendnetwork method)": [[112, "compas_bender.datastructures.BendNetwork.transform_numpy"]], "transformed() (compas_bender.datastructures.bendnetwork method)": [[113, "compas_bender.datastructures.BendNetwork.transformed"]], "transformed_numpy() (compas_bender.datastructures.bendnetwork method)": [[114, "compas_bender.datastructures.BendNetwork.transformed_numpy"]], "translate() (compas_bender.datastructures.bendnetwork method)": [[115, "compas_bender.datastructures.BendNetwork.translate"]], "translated() (compas_bender.datastructures.bendnetwork method)": [[116, "compas_bender.datastructures.BendNetwork.translated"]], "unset_edge_attribute() (compas_bender.datastructures.bendnetwork method)": [[117, "compas_bender.datastructures.BendNetwork.unset_edge_attribute"]], "unset_node_attribute() (compas_bender.datastructures.bendnetwork method)": [[118, "compas_bender.datastructures.BendNetwork.unset_node_attribute"]], "update_default_edge_attributes() (compas_bender.datastructures.bendnetwork method)": [[119, "compas_bender.datastructures.BendNetwork.update_default_edge_attributes"]], "update_default_node_attributes() (compas_bender.datastructures.bendnetwork method)": [[120, "compas_bender.datastructures.BendNetwork.update_default_node_attributes"]], "validate_data() (compas_bender.datastructures.bendnetwork class method)": [[121, "compas_bender.datastructures.BendNetwork.validate_data"]]}})